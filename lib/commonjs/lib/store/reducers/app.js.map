{"version":3,"sources":["app.js"],"names":["name","initialState","drawer","hasBeenOffline","navigator","onLine","isOnline","isPageLoading","overlay","pending","searchOpen","reducerMap","actions","toggleDrawer","state","payload","toggleSearch","setOnline","setOffline","setPageLoading"],"mappings":";;;;;;;AAAA;;AAEA;;;;AAEO,MAAMA,IAAI,GAAG,KAAb;;AAEP,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,IADW;AAEnBC,EAAAA,cAAc,EAAE,CAACC,SAAS,CAACC,MAFR;AAGnBC,EAAAA,QAAQ,EAAEF,SAAS,CAACC,MAHD;AAInBE,EAAAA,aAAa,EAAE,KAJI;AAKnBC,EAAAA,OAAO,EAAE,KALU;AAMnBC,EAAAA,OAAO,EAAE,EANU;AAOnBC,EAAAA,UAAU,EAAE;AAPO,CAArB;AAUA,MAAMC,UAAU,GAAG;AACjB,GAACC,aAAQC,YAAT,GAAwB,CAACC,KAAD,EAAQ;AAACC,IAAAA;AAAD,GAAR,KAAsB;AAC5C,WAAO,EACL,GAAGD,KADE;AAELZ,MAAAA,MAAM,EAAEa,OAFH;AAGLP,MAAAA,OAAO,EAAE,CAAC,CAACO;AAHN,KAAP;AAKD,GAPgB;AAQjB,GAACH,aAAQI,YAAT,GAAwBF,KAAK,IAAI;AAC/B,WAAO,EACL,GAAGA,KADE;AAELJ,MAAAA,UAAU,EAAE,CAACI,KAAK,CAACJ;AAFd,KAAP;AAID,GAbgB;AAcjB,GAACE,aAAQK,SAAT,GAAqBH,KAAK,IAAI;AAC5B,WAAO,EACL,GAAGA,KADE;AAELR,MAAAA,QAAQ,EAAE;AAFL,KAAP;AAID,GAnBgB;AAoBjB,GAACM,aAAQM,UAAT,GAAsBJ,KAAK,IAAI;AAC7B,WAAO,EACL,GAAGA,KADE;AAELR,MAAAA,QAAQ,EAAE,KAFL;AAGLH,MAAAA,cAAc,EAAE;AAHX,KAAP;AAKD,GA1BgB;AA2BjB,GAACS,aAAQO,cAAT,GAA0B,CAACL,KAAD,EAAQ;AAACC,IAAAA;AAAD,GAAR,KAAsB;AAC9C,WAAO,EACL,GAAGD,KADE;AAELP,MAAAA,aAAa,EAAE,CAAC,CAACQ;AAFZ,KAAP;AAID;AAhCgB,CAAnB;;eAmCe,iCAAcJ,UAAd,EAA0BV,YAA1B,C","sourcesContent":["import {handleActions} from 'redux-actions';\n\nimport actions from '../actions/app';\n\nexport const name = 'app';\n\nconst initialState = {\n  drawer: null,\n  hasBeenOffline: !navigator.onLine,\n  isOnline: navigator.onLine,\n  isPageLoading: false,\n  overlay: false,\n  pending: {},\n  searchOpen: false,\n};\n\nconst reducerMap = {\n  [actions.toggleDrawer]: (state, {payload}) => {\n    return {\n      ...state,\n      drawer: payload,\n      overlay: !!payload,\n    };\n  },\n  [actions.toggleSearch]: state => {\n    return {\n      ...state,\n      searchOpen: !state.searchOpen,\n    };\n  },\n  [actions.setOnline]: state => {\n    return {\n      ...state,\n      isOnline: true,\n    };\n  },\n  [actions.setOffline]: state => {\n    return {\n      ...state,\n      isOnline: false,\n      hasBeenOffline: true,\n    };\n  },\n  [actions.setPageLoading]: (state, {payload}) => {\n    return {\n      ...state,\n      isPageLoading: !!payload,\n    };\n  },\n};\n\nexport default handleActions(reducerMap, initialState);\n"]}