{"version":3,"sources":["user.js"],"names":["UserContext","UserContextProvider","props","actions","asyncActions","children","userState","userApi","contextValue","mapStateToProps","user","mapDispatchToProps","dispatch","useUserContext"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;AACA;;AACA;;;;;;;;AAEA,MAAMA,WAAW,gBAAG,2BAApB;;AAEA,MAAMC,mBAAmB,GAAGC,KAAK,IAAI;AACjC,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,YAAX;AAAyBC,IAAAA,QAAzB;AAAmCC,IAAAA;AAAnC,MAAiDJ,KAAvD;AAEA,QAAMK,OAAO,GAAG,oBACZ,OAAO;AACHJ,IAAAA,OADG;AAEH,OAAGC;AAFA,GAAP,CADY,EAKZ,CAACD,OAAD,EAAUC,YAAV,CALY,CAAhB;AAQA,QAAMI,YAAY,GAAG,oBAAQ,MAAM,CAACF,SAAD,EAAYC,OAAZ,CAAd,EAAoC,CACrDA,OADqD,EAErDD,SAFqD,CAApC,CAArB;AAKA,sBACI,6BAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE;AAA7B,KACKH,QADL,CADJ;AAKH,CArBD;;AAuBA,MAAMI,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,MAAe;AAAEJ,EAAAA,SAAS,EAAEI;AAAb,CAAf,CAAxB;;AAEA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AACpCT,EAAAA,OAAO,EAAE,iCAAmBA,gBAAnB,EAA4BS,QAA5B,CAD2B;AAEpCR,EAAAA,YAAY,EAAE,iCAAmBA,YAAnB,EAAiCQ,QAAjC;AAFsB,CAAL,CAAnC;;eAKe,yBACXH,eADW,EAEXE,kBAFW,EAGbV,mBAHa,C;AAKf;;;;;;;;;;;;AAYA;;;;;;;;AAQA;;;;;;;;;;AAUA;;;;;;;AAGO,MAAMY,cAAc,GAAG,MAAM,uBAAWb,WAAX,CAA7B","sourcesContent":["import React, { createContext, useContext, useMemo } from 'react';\nimport { connect } from 'react-redux';\n\nimport actions from '../store/actions/user/actions';\nimport * as asyncActions from '../store/actions/user/asyncActions';\nimport bindActionCreators from '../util/bindActionCreators';\n\nconst UserContext = createContext();\n\nconst UserContextProvider = props => {\n    const { actions, asyncActions, children, userState } = props;\n\n    const userApi = useMemo(\n        () => ({\n            actions,\n            ...asyncActions\n        }),\n        [actions, asyncActions]\n    );\n\n    const contextValue = useMemo(() => [userState, userApi], [\n        userApi,\n        userState\n    ]);\n\n    return (\n        <UserContext.Provider value={contextValue}>\n            {children}\n        </UserContext.Provider>\n    );\n};\n\nconst mapStateToProps = ({ user }) => ({ userState: user });\n\nconst mapDispatchToProps = dispatch => ({\n    actions: bindActionCreators(actions, dispatch),\n    asyncActions: bindActionCreators(asyncActions, dispatch)\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(UserContextProvider);\n\n/**\n * @typedef {Object} UserState\n *\n * @property {CurrentUser} currentUser Current user details\n * @property {Error} getDetailsError Get Details call related error\n * @property {Boolean} isGettingDetails Boolean if true indicates that user details are being fetched. False otherwise.\n * @property {Boolean} isResettingPassword Deprecated\n * @property {Boolean} isSignedIn Boolean if true indicates that the user is signed in. False otherwise.\n * @property {Error} resetPasswordError Deprecated\n *\n */\n\n/**\n * @typedef {Object} CurrentUser\n *\n * @property {String} email Current user's email\n * @property {String} firstname Current user's first name\n * @property {String} lastname Current user's last name\n */\n\n/**\n * @typedef {Object} UserActions\n *\n * @property {Function} clearToken Callback to clear user token in browser persistence storage\n * @property {Function} getUserDetails Callback to get user details\n * @property {Function} resetPassword Deprecated\n * @property {Function} setToken Callback to set user token in browser persistence storage\n * @property {Function} signOut Callback to sign the user out\n */\n\n/**\n * @returns {[UserState, UserActions]}\n */\nexport const useUserContext = () => useContext(UserContext);\n"]}