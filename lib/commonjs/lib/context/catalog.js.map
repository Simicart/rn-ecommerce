{"version":3,"sources":["catalog.js"],"names":["CatalogContext","CatalogContextProvider","props","actions","asyncActions","catalogState","children","catalogApi","contextValue","mapStateToProps","catalog","mapDispatchToProps","dispatch","useCatalogContext"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;AACA;;AACA;;;;;;;;AAEA,MAAMA,cAAc,gBAAG,2BAAvB;;AAEA,MAAMC,sBAAsB,GAAGC,KAAK,IAAI;AACpC,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,YAAX;AAAyBC,IAAAA,YAAzB;AAAuCC,IAAAA;AAAvC,MAAoDJ,KAA1D;AAEA,QAAMK,UAAU,GAAG,oBACf,OAAO;AACHJ,IAAAA,OADG;AAEH,OAAGC;AAFA,GAAP,CADe,EAKf,CAACD,OAAD,EAAUC,YAAV,CALe,CAAnB;AAQA,QAAMI,YAAY,GAAG,oBAAQ,MAAM,CAACH,YAAD,EAAeE,UAAf,CAAd,EAA0C,CAC3DA,UAD2D,EAE3DF,YAF2D,CAA1C,CAArB;AAKA,sBACI,6BAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAEG;AAAhC,KACKF,QADL,CADJ;AAKH,CArBD;;AAuBA,MAAMG,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,MAAkB;AAAEL,EAAAA,YAAY,EAAEK;AAAhB,CAAlB,CAAxB;;AAEA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AACpCT,EAAAA,OAAO,EAAE,iCAAmBA,gBAAnB,EAA4BS,QAA5B,CAD2B;AAEpCR,EAAAA,YAAY,EAAE,iCAAmBA,YAAnB,EAAiCQ,QAAjC;AAFsB,CAAL,CAAnC;;eAKe,yBACXH,eADW,EAEXE,kBAFW,EAGbV,sBAHa,C;;;;AAKR,MAAMY,iBAAiB,GAAG,MAAM,uBAAWb,cAAX,CAAhC","sourcesContent":["import React, { createContext, useContext, useMemo } from 'react';\nimport { connect } from 'react-redux';\n\nimport actions from '../store/actions/catalog/actions';\nimport * as asyncActions from '../store/actions/catalog/asyncActions';\nimport bindActionCreators from '../util/bindActionCreators';\n\nconst CatalogContext = createContext();\n\nconst CatalogContextProvider = props => {\n    const { actions, asyncActions, catalogState, children } = props;\n\n    const catalogApi = useMemo(\n        () => ({\n            actions,\n            ...asyncActions\n        }),\n        [actions, asyncActions]\n    );\n\n    const contextValue = useMemo(() => [catalogState, catalogApi], [\n        catalogApi,\n        catalogState\n    ]);\n\n    return (\n        <CatalogContext.Provider value={contextValue}>\n            {children}\n        </CatalogContext.Provider>\n    );\n};\n\nconst mapStateToProps = ({ catalog }) => ({ catalogState: catalog });\n\nconst mapDispatchToProps = dispatch => ({\n    actions: bindActionCreators(actions, dispatch),\n    asyncActions: bindActionCreators(asyncActions, dispatch)\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(CatalogContextProvider);\n\nexport const useCatalogContext = () => useContext(CatalogContext);\n"]}