{"version":3,"sources":["useDropdown.js"],"names":["useDropdown","elementRef","triggerRef","expanded","setExpanded","maybeCollapse","target","isOutsideElement","current","contains","isOutsideTrigger","document"],"mappings":";;;;;;;AAAA;;AAEA;;AAEA;;;;;;;AAOO,MAAMA,WAAW,GAAG,MAAM;AAC7B,QAAMC,UAAU,GAAG,mBAAO,IAAP,CAAnB;AACA,QAAMC,UAAU,GAAG,mBAAO,IAAP,CAAnB;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0B,qBAAS,KAAT,CAAhC,CAH6B,CAK7B;;AACA,QAAMC,aAAa,GAAG,wBAAY,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAgB;AAC9C,UAAMC,gBAAgB,GAClB,CAACN,UAAU,CAACO,OAAZ,IAAuB,CAACP,UAAU,CAACO,OAAX,CAAmBC,QAAnB,CAA4BH,MAA5B,CAD5B;AAEA,UAAMI,gBAAgB,GAClB,CAACR,UAAU,CAACM,OAAZ,IAAuB,CAACN,UAAU,CAACM,OAAX,CAAmBC,QAAnB,CAA4BH,MAA5B,CAD5B;;AAGA,QAAIC,gBAAgB,IAAIG,gBAAxB,EAA0C;AACtCN,MAAAA,WAAW,CAAC,KAAD,CAAX;AACH;AACJ,GATqB,EASnB,EATmB,CAAtB,CAN6B,CAiB7B;;AACA,0CAAiBO,QAAjB,EAA2B,WAA3B,EAAwCN,aAAxC;AAEA;;;;;;;;;;;AAUA,SAAO;AACHJ,IAAAA,UADG;AAEHE,IAAAA,QAFG;AAGHC,IAAAA,WAHG;AAIHF,IAAAA;AAJG,GAAP;AAMH,CApCM","sourcesContent":["import { useCallback, useRef, useState } from 'react';\n\nimport { useEventListener } from './useEventListener';\n\n/**\n * A React Hook for adding dropdown-related logic.\n *\n * @kind function\n *\n * @return {Dropdown} An object containing functions and values to add dropdown logic\n */\nexport const useDropdown = () => {\n    const elementRef = useRef(null);\n    const triggerRef = useRef(null);\n    const [expanded, setExpanded] = useState(false);\n\n    // collapse on mousedown outside of the element and trigger.\n    const maybeCollapse = useCallback(({ target }) => {\n        const isOutsideElement =\n            !elementRef.current || !elementRef.current.contains(target);\n        const isOutsideTrigger =\n            !triggerRef.current || !triggerRef.current.contains(target);\n\n        if (isOutsideElement && isOutsideTrigger) {\n            setExpanded(false);\n        }\n    }, []);\n\n    // add listener to document, as an effect\n    useEventListener(document, 'mousedown', maybeCollapse);\n\n    /**\n     * The object returned contains the pieces needed to add the dropdown logic to your components\n     *\n     * @typedef Dropdown\n     * @type {Object}\n     * @property {Ref} elementRef - A [ref]{@link https://reactjs.org/docs/refs-and-the-dom.html} object for attaching to React elements\n     * @property {Boolean} expanded - The value of the `expanded` state\n     * @property {Function} setExpanded - [State Hook]{@link https://reactjs.org/docs/hooks-state.html} function for setting the expanded state\n     * @property {Ref} triggerRef - A [ref]{@link https://reactjs.org/docs/refs-and-the-dom.html} object for attaching to React elements\n     */\n    return {\n        elementRef,\n        expanded,\n        setExpanded,\n        triggerRef\n    };\n};\n"]}