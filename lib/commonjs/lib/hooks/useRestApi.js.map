{"version":3,"sources":["useRestApi.js"],"names":["request","RestApi","Magento2","useRestApi","endpoint","restResponseState","restResponseApi","receiveError","receiveResponse","setLoading","sendRequest","options","response","error","baseMessage","api"],"mappings":";;;;;;;AAAA;;AAEA;;AACA;;;;;;AAEA,MAAM;AAAEA,EAAAA;AAAF,IAAcC,OAAO,CAACC,QAA5B;AAEA;;;;;;;AAMO,MAAMC,UAAU,GAAGC,QAAQ,IAAI;AAClC,QAAM,CAACC,iBAAD,EAAoBC,eAApB,IAAuC,uCAA7C;AACA,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,eAAhB;AAAiCC,IAAAA;AAAjC,MAAgDH,eAAtD,CAFkC,CAIlC;AACA;;AACA,QAAMI,WAAW,GAAG,wBAChB,OAAO;AAAEC,IAAAA;AAAF,GAAP,KAAuB;AACnB;AACA;AACA;AACAF,IAAAA,UAAU,CAAC,IAAD,CAAV;;AAEA,QAAI;AACA,YAAMG,QAAQ,GAAG,MAAMZ,OAAO,CAACI,QAAD,EAAWO,OAAX,CAA9B;AACAH,MAAAA,eAAe,CAACI,QAAD,CAAf;AACH,KAHD,CAGE,OAAOC,KAAP,EAAc;AACZ;AACAN,MAAAA,YAAY,CAACM,KAAK,CAACC,WAAP,CAAZ;AACH;AACJ,GAde,EAehB,CAACV,QAAD,EAAWG,YAAX,EAAyBC,eAAzB,EAA0CC,UAA1C,CAfgB,CAApB;AAkBA,QAAMM,GAAG,GAAG,oBACR,OAAO,EACH,GAAGT,eADA;AAEHI,IAAAA;AAFG,GAAP,CADQ,EAKR,CAACJ,eAAD,EAAkBI,WAAlB,CALQ,CAAZ;AAQA,SAAO,CAACL,iBAAD,EAAoBU,GAApB,CAAP;AACH,CAjCM","sourcesContent":["import { useCallback, useMemo } from 'react';\n\nimport * as RestApi from '../RestApi';\nimport { useRestResponse } from './useRestResponse';\n\nconst { request } = RestApi.Magento2;\n\n/**\n * Exposes an API for sending REST calls and handling their responses.\n *\n * @param {String} endpoint - A Magento 2 REST API endpoint.\n *  Ex: /rest/V1/carts/mine/estimate-shipping-methods\n */\nexport const useRestApi = endpoint => {\n    const [restResponseState, restResponseApi] = useRestResponse();\n    const { receiveError, receiveResponse, setLoading } = restResponseApi;\n\n    // Define a callback that sends a request\n    // either as an effect or in response to user interaction.\n    const sendRequest = useCallback(\n        async ({ options }) => {\n            // setLoading to true before making the call.\n            // There is no need to setLoading to false after because\n            // both receiveResponse and receiveError handle that.\n            setLoading(true);\n\n            try {\n                const response = await request(endpoint, options);\n                receiveResponse(response);\n            } catch (error) {\n                // error is of type M2ApiResponseError here.\n                receiveError(error.baseMessage);\n            }\n        },\n        [endpoint, receiveError, receiveResponse, setLoading]\n    );\n\n    const api = useMemo(\n        () => ({\n            ...restResponseApi,\n            sendRequest\n        }),\n        [restResponseApi, sendRequest]\n    );\n\n    return [restResponseState, api];\n};\n"]}