{"version":3,"sources":["useTypePolicies.js"],"names":["useTypePolicies","typePolicies","apolloClient","cache","policies","addTypePolicies"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;;;;AAKA;;;;;;AAMA;;;;;AAKA;;;;;AAKO,MAAMA,eAAe,GAAGC,YAAY,IAAI;AAC3C,QAAMC,YAAY,GAAG,8BAArB;AAEA,wBAAU,MAAM;AACZA,IAAAA,YAAY,CAACC,KAAb,CAAmBC,QAAnB,CAA4BC,eAA5B,CAA4CJ,YAA5C;AACH,GAFD,EAEG,CAACC,YAAD,EAAeD,YAAf,CAFH;AAGH,CANM","sourcesContent":["import { useApolloClient } from '@apollo/client';\nimport { useEffect } from 'react';\n\n/**\n * @typedef {string} Type\n * @description A data type as described by your GraphQL schema.\n */\n\n/**\n * @typedef {Object} TypePolicy\n * @description A policy object for a given type.\n * See https://www.apollographql.com/docs/react/caching/cache-configuration/#typepolicy-fields\n */\n\n/**\n * @typedef {Object<Type,TypePolicy>} TypePolicyMap\n * @description A map of Types to type policy object.\n */\n\n/**\n * Adds given type policies to the Apollo Client.\n *\n * @param {TypePolicyMap} typePolicies\n */\nexport const useTypePolicies = typePolicies => {\n    const apolloClient = useApolloClient();\n\n    useEffect(() => {\n        apolloClient.cache.policies.addTypePolicies(typePolicies);\n    }, [apolloClient, typePolicies]);\n};\n"]}