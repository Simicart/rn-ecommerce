{"version":3,"sources":["deleteCacheEntry.js"],"names":["deleteCacheEntry","client","predicate","cache","data","process","env","NODE_ENV","console","warn","Object","keys","forEach","key","delete","persistor","persist"],"mappings":";;;;;;;AAAA;;;;;;;AAOO,MAAMA,gBAAgB,GAAG,OAAOC,MAAP,EAAeC,SAAf,KAA6B;AACzD;AACA,MACI,CAACD,MAAD,IACA,CAACA,MAAM,CAACE,KADR,IAEA,CAACF,MAAM,CAACE,KAAP,CAAaC,IAFd,IAGA,CAACH,MAAM,CAACE,KAAP,CAAaC,IAAb,CAAkBA,IAJvB,EAKE;AACE,QAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AACxCC,MAAAA,OAAO,CAACC,IAAR,CACI,gEADJ;AAGH;;AACD;AACH;;AAEDC,EAAAA,MAAM,CAACC,IAAP,CAAYV,MAAM,CAACE,KAAP,CAAaC,IAAb,CAAkBA,IAA9B,EAAoCQ,OAApC,CAA4CC,GAAG,IAAI;AAC/C,QAAIX,SAAS,CAACW,GAAD,CAAb,EAAoB;AAChBZ,MAAAA,MAAM,CAACE,KAAP,CAAaC,IAAb,CAAkBU,MAAlB,CAAyBD,GAAzB;AACH;AACJ,GAJD,EAhByD,CAsBzD;;AACA,MAAIZ,MAAM,CAACc,SAAX,EAAsB;AAClB,UAAMd,MAAM,CAACc,SAAP,CAAiBC,OAAjB,EAAN;AACH;AACJ,CA1BM","sourcesContent":["/**\n * Deletes specific entry/entries from the apollo cache and then tries to\n * persist the deletions.\n *\n * @param {ApolloClient} client apollo client instance\n * @param {Function} predicate a matching function\n */\nexport const deleteCacheEntry = async (client, predicate) => {\n    // If there is no client or cache then just back out since it doesn't matter :D\n    if (\n        !client ||\n        !client.cache ||\n        !client.cache.data ||\n        !client.cache.data.data\n    ) {\n        if (process.env.NODE_ENV === 'development') {\n            console.warn(\n                'Apollo Cache entry deletion attempted without client or cache.'\n            );\n        }\n        return;\n    }\n\n    Object.keys(client.cache.data.data).forEach(key => {\n        if (predicate(key)) {\n            client.cache.data.delete(key);\n        }\n    });\n\n    // Immediately persist the cache changes.\n    if (client.persistor) {\n        await client.persistor.persist();\n    }\n};\n"]}