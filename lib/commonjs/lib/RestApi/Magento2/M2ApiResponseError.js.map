{"version":3,"sources":["M2ApiResponseError.js"],"names":["M2ApiResponseError","Error","constructor","method","resourceUrl","response","bodyText","args","body","parsedBodyText","JSON","parse","message","trace","rest","addl","Object","entries","length","stringify","e","status","statusText","captureStackTrace","baseMessage"],"mappings":";;;;;;;AAAe,MAAMA,kBAAN,SAAiCC,KAAjC,CAAuC;AAClDC,EAAAA,WAAW,CAAC;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,WAAV;AAAuBC,IAAAA,QAAvB;AAAiCC,IAAAA;AAAjC,GAAD,EAA8C,GAAGC,IAAjD,EAAuD;AAC9D,QAAIC,IAAI,KAAR;AACA,QAAIC,cAAJ;;AAEA,QAAI;AACAA,MAAAA,cAAc,GAAGC,IAAI,CAACC,KAAL,CAAWL,QAAX,CAAjB;AACA,YAAM;AAAEM,QAAAA,OAAF;AAAWC,QAAAA,KAAX;AAAkB,WAAGC;AAArB,UAA8BL,cAApC;;AAEA,UAAIG,OAAJ,EAAa;AACTJ,QAAAA,IAAI,4BAAqBI,OAArB,OAAJ;AACH;;AAED,YAAMG,IAAI,GAAGC,MAAM,CAACC,OAAP,CAAeH,IAAf,CAAb;;AACA,UAAIC,IAAI,CAACG,MAAL,GAAc,CAAlB,EAAqB;AACjBV,QAAAA,IAAI,oCAA6BE,IAAI,CAACS,SAAL,CAC7BL,IAD6B,EAE7B,IAF6B,EAG7B,CAH6B,CAA7B,SAAJ;AAKH;;AAED,UAAID,KAAJ,EAAW;AACPL,QAAAA,IAAI,2CAAoCK,KAApC,CAAJ;AACH;;AAEDL,MAAAA,IAAI,IAAI,IAAR;AACH,KAtBD,CAsBE,OAAOY,CAAP,EAAU;AACRZ,MAAAA,IAAI,GAAGF,QAAP;AACH;;AAED,oBACOH,MADP,cACiBC,WADjB,wBAC0CC,QAAQ,CAACgB,MADnD,cAEQhB,QAAQ,CAACiB,UAFjB,mBAGad,IAHb,GAII,GAAGD,IAJP;;AAOA,QAAIN,KAAK,CAACsB,iBAAV,EAA6B;AACzBtB,MAAAA,KAAK,CAACsB,iBAAN,CAAwB,IAAxB,EAA8BvB,kBAA9B;AACH;;AAED,SAAKK,QAAL,GAAgBA,QAAhB;AACA,SAAKF,MAAL,GAAcA,MAAd;AACA,SAAKC,WAAL,GAAmBA,WAAnB,CA3C8D,CA6C9D;;AACA,SAAKoB,WAAL,GAAmBf,cAAc,GAAGA,cAAc,CAACG,OAAlB,GAA4BN,QAA7D;AACH;;AAhDiD","sourcesContent":["export default class M2ApiResponseError extends Error {\n    constructor({ method, resourceUrl, response, bodyText }, ...args) {\n        let body = ``;\n        let parsedBodyText;\n\n        try {\n            parsedBodyText = JSON.parse(bodyText);\n            const { message, trace, ...rest } = parsedBodyText;\n\n            if (message) {\n                body += `Message:\\n\\n  ${message}\\n`;\n            }\n\n            const addl = Object.entries(rest);\n            if (addl.length > 0) {\n                body += `\\nAdditional info:\\n\\n${JSON.stringify(\n                    rest,\n                    null,\n                    4\n                )}\\n\\n`;\n            }\n\n            if (trace) {\n                body += `Magento PHP stack trace: \\n\\n${trace}`;\n            }\n\n            body += '\\n';\n        } catch (e) {\n            body = bodyText;\n        }\n\n        super(\n            `${method} ${resourceUrl} responded ${response.status} ${\n                response.statusText\n            }: \\n\\n${body}`,\n            ...args\n        );\n\n        if (Error.captureStackTrace) {\n            Error.captureStackTrace(this, M2ApiResponseError);\n        }\n\n        this.response = response;\n        this.method = method;\n        this.resourceUrl = resourceUrl;\n\n        // Preserve the original error message.\n        this.baseMessage = parsedBodyText ? parsedBodyText.message : bodyText;\n    }\n}\n"]}