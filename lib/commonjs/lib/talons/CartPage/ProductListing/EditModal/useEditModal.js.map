{"version":3,"sources":["useEditModal.js"],"names":["useEditModal","drawer","closeDrawer","isOpen","variantPrice","setVariantPrice","handleClose"],"mappings":";;;;;;;AAAA;;AAEA;;AAEA;;;;;;;;;;;AAWO,MAAMA,YAAY,GAAG,MAAM;AAC9B,QAAM,CAAC;AAAEC,IAAAA;AAAF,GAAD,EAAa;AAAEC,IAAAA;AAAF,GAAb,IAAgC,yBAAtC;AACA,QAAMC,MAAM,GAAGF,MAAM,KAAK,cAA1B;AAEA,QAAM,CAACG,YAAD,EAAeC,eAAf,IAAkC,qBAAS,IAAT,CAAxC;AAEA,SAAO;AACHC,IAAAA,WAAW,EAAEJ,WADV;AAEHC,IAAAA,MAFG;AAGHE,IAAAA,eAHG;AAIHD,IAAAA;AAJG,GAAP;AAMH,CAZM;AAcP;;AAEA","sourcesContent":["import { useState } from 'react';\n\nimport { useAppContext } from '../../../../context/app';\n\n/**\n * This talon contains logic for a product edit modal used on a cart page.\n * It returns prop data for rendering an interactive modal component.\n *\n * @function\n *\n * @return {EditModalTalonProps}\n *\n * @example <caption>Importing into your project</caption>\n * import { useEditModal } from '@magento/peregrine/lib/talons/CartPage/ProductListing/EditModal/useEditModal';\n */\nexport const useEditModal = () => {\n    const [{ drawer }, { closeDrawer }] = useAppContext();\n    const isOpen = drawer === 'product.edit';\n\n    const [variantPrice, setVariantPrice] = useState(null);\n\n    return {\n        handleClose: closeDrawer,\n        isOpen,\n        setVariantPrice,\n        variantPrice\n    };\n};\n\n/** JSDocs type definitions */\n\n/**\n * Object type returned by the {@link useEditModal} talon.\n * It provides props data for rendering an edit modal component.\n *\n * @typedef {Object} EditModalTalonProps\n *\n * @property {function} handleClose Callback function for handling the closing event of the modal.\n * @property {boolean} isOpen True if the modal is open. False otherwise.\n * @property {function} setVariantPrice Function for setting a product's variant price.\n * @property {Object} variantPrice The variant price for a product. See [Money object]{@link https://devdocs.magento.com/guides/v2.4/graphql/product/product-interface.html#Money}.\n */\n"]}