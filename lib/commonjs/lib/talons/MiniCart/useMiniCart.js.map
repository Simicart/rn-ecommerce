{"version":3,"sources":["useMiniCart.js"],"names":["useMiniCart","props","setIsOpen","queries","mutations","miniCartQuery","removeItemMutation","cartId","history","data","miniCartData","loading","miniCartLoading","fetchPolicy","nextFetchPolicy","variables","skip","removeItem","removeItemLoading","called","removeItemCalled","error","removeItemError","totalQuantity","cart","total_quantity","subTotal","prices","subtotal_excluding_tax","productList","items","closeMiniCart","handleRemoveItem","id","itemId","e","handleProceedToCheckout","push","handleEditCart","derivedErrorMessage","errorMessage"],"mappings":"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","sourcesContent":["import { useCallback, useMemo } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useQuery, useMutation } from '@apollo/client';\n\nimport { useCartContext } from '../../context/cart';\nimport { deriveErrorMessage } from '../../util/deriveErrorMessage';\n\n/**\n *\n * @param {Function} props.setIsOpen - Function to toggle the mini cart\n * @param {DocumentNode} props.queries.miniCartQuery - Query to fetch mini cart data\n * @param {DocumentNode} props.mutations.removeItemMutation - Mutation to remove an item from cart\n *\n * @returns {\n *      closeMiniCart: Function,\n *      errorMessage: String,\n *      handleEditCart: Function,\n *      handleProceedToCheckout: Function,\n *      handleRemoveItem: Function,\n *      loading: Boolean,\n *      productList: Array<>,\n *      subTotal: Number,\n *      totalQuantity: Number\n *  }\n */\nexport const useMiniCart = props => {\n    const { setIsOpen, queries, mutations } = props;\n    const { miniCartQuery } = queries;\n    const { removeItemMutation } = mutations;\n\n    const [{ cartId }] = useCartContext();\n    const history = useHistory();\n\n    const { data: miniCartData, loading: miniCartLoading } = useQuery(\n        miniCartQuery,\n        {\n            fetchPolicy: 'cache-and-network',\n            nextFetchPolicy: 'cache-first',\n            variables: { cartId },\n            skip: !cartId\n        }\n    );\n\n    const [\n        removeItem,\n        {\n            loading: removeItemLoading,\n            called: removeItemCalled,\n            error: removeItemError\n        }\n    ] = useMutation(removeItemMutation);\n\n    const totalQuantity = useMemo(() => {\n        if (!miniCartLoading && miniCartData) {\n            return miniCartData.cart.total_quantity;\n        }\n    }, [miniCartData, miniCartLoading]);\n\n    const subTotal = useMemo(() => {\n        if (!miniCartLoading && miniCartData) {\n            return miniCartData.cart.prices.subtotal_excluding_tax;\n        }\n    }, [miniCartData, miniCartLoading]);\n\n    const productList = useMemo(() => {\n        if (!miniCartLoading && miniCartData) {\n            return miniCartData.cart.items;\n        }\n    }, [miniCartData, miniCartLoading]);\n\n    const closeMiniCart = useCallback(() => {\n        setIsOpen(false);\n    }, [setIsOpen]);\n\n    const handleRemoveItem = useCallback(\n        async id => {\n            try {\n                await removeItem({\n                    variables: {\n                        cartId,\n                        itemId: id\n                    }\n                });\n            } catch (e) {\n                // Error is logged by apollo link - no need to double log.\n            }\n        },\n        [cartId, removeItem]\n    );\n\n    const handleProceedToCheckout = useCallback(() => {\n        setIsOpen(false);\n        history.push('/checkout');\n    }, [history, setIsOpen]);\n\n    const handleEditCart = useCallback(() => {\n        setIsOpen(false);\n        history.push('/cart');\n    }, [history, setIsOpen]);\n\n    const derivedErrorMessage = useMemo(\n        () => deriveErrorMessage([removeItemError]),\n        [removeItemError]\n    );\n\n    return {\n        closeMiniCart,\n        errorMessage: derivedErrorMessage,\n        handleEditCart,\n        handleProceedToCheckout,\n        handleRemoveItem,\n        loading: miniCartLoading || (removeItemCalled && removeItemLoading),\n        productList,\n        subTotal,\n        totalQuantity\n    };\n};\n"]}