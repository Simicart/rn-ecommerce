{"version":3,"sources":["useAccordion.js"],"names":["useAccordion","props","canOpenMultiple","children","openSectionIds","setOpenSectionIds","Set","handleSectionToggle","sectionId","prevOpenSectionIds","nextOpenSectionIds","has","clear","add","delete","isOpenPropTruthy","child","isOpen","initialOpenSectionIds","firstOpenSectionId","Children","toArray","forEach","id","childId","size"],"mappings":";;;;;;;AAAA;;AAEO,MAAMA,YAAY,GAAGC,KAAK,IAAI;AACjC,QAAM;AAAEC,IAAAA,eAAF;AAAmBC,IAAAA;AAAnB,MAAgCF,KAAtC;AAEA,QAAM,CAACG,cAAD,EAAiBC,iBAAjB,IAAsC,qBAAS,IAAIC,GAAJ,CAAQ,EAAR,CAAT,CAA5C;AAEA,QAAMC,mBAAmB,GAAG,wBACxBC,SAAS,IAAI;AACTH,IAAAA,iBAAiB,CAACI,kBAAkB,IAAI;AACpC,YAAMC,kBAAkB,GAAG,IAAIJ,GAAJ,CAAQG,kBAAR,CAA3B;;AAEA,UAAI,CAACA,kBAAkB,CAACE,GAAnB,CAAuBH,SAAvB,CAAL,EAAwC;AACpC;AACA;AACA,YAAI,CAACN,eAAL,EAAsB;AAClBQ,UAAAA,kBAAkB,CAACE,KAAnB;AACH;;AAEDF,QAAAA,kBAAkB,CAACG,GAAnB,CAAuBL,SAAvB;AACH,OARD,MAQO;AACH;AACAE,QAAAA,kBAAkB,CAACI,MAAnB,CAA0BN,SAA1B;AACH;;AAED,aAAOE,kBAAP;AACH,KAjBgB,CAAjB;AAkBH,GApBuB,EAqBxB,CAACR,eAAD,EAAkBG,iBAAlB,CArBwB,CAA5B,CALiC,CA6BjC;AACA;AACA;;AACA;;AACA,wBAAU,MAAM;AACZ,UAAMU,gBAAgB,GAAGC,KAAK,IAAIA,KAAK,CAACf,KAAN,CAAYgB,MAA9C;;AAEA,UAAMC,qBAAqB,GAAG,IAAIZ,GAAJ,CAAQ,EAAR,CAA9B;AACA,QAAIa,kBAAJ;;AAEAC,oBAASC,OAAT,CAAiBlB,QAAjB,EAA2BmB,OAA3B,CAAmCN,KAAK,IAAI;AACxC,UAAID,gBAAgB,CAACC,KAAD,CAApB,EAA6B;AACzB,cAAM;AAAEO,UAAAA,EAAE,EAAEC;AAAN,YAAkBR,KAAK,CAACf,KAA9B;AAEAiB,QAAAA,qBAAqB,CAACL,GAAtB,CAA0BW,OAA1B;;AAEA,YAAI,CAACL,kBAAL,EAAyB;AACrBA,UAAAA,kBAAkB,GAAGK,OAArB;AACH;AACJ;AACJ,KAVD,EANY,CAkBZ;AACA;;;AACA,QAAI,CAACtB,eAAD,IAAoBgB,qBAAqB,CAACO,IAAtB,GAA6B,CAArD,EAAwD;AACpDP,MAAAA,qBAAqB,CAACN,KAAtB;AACAM,MAAAA,qBAAqB,CAACL,GAAtB,CAA0BM,kBAA1B;AACH;;AAEDd,IAAAA,iBAAiB,CAACa,qBAAD,CAAjB;AACH,GA1BD,EA0BG,EA1BH;AA2BA;;AAEA,SAAO;AACHX,IAAAA,mBADG;AAEHH,IAAAA;AAFG,GAAP;AAIH,CAlEM","sourcesContent":["import { Children, useCallback, useEffect, useState } from 'react';\n\nexport const useAccordion = props => {\n    const { canOpenMultiple, children } = props;\n\n    const [openSectionIds, setOpenSectionIds] = useState(new Set([]));\n\n    const handleSectionToggle = useCallback(\n        sectionId => {\n            setOpenSectionIds(prevOpenSectionIds => {\n                const nextOpenSectionIds = new Set(prevOpenSectionIds);\n\n                if (!prevOpenSectionIds.has(sectionId)) {\n                    // The user wants to open this section.\n                    // If we don't allow multiple sections to be open, close the others first.\n                    if (!canOpenMultiple) {\n                        nextOpenSectionIds.clear();\n                    }\n\n                    nextOpenSectionIds.add(sectionId);\n                } else {\n                    // The user wants to close this section.\n                    nextOpenSectionIds.delete(sectionId);\n                }\n\n                return nextOpenSectionIds;\n            });\n        },\n        [canOpenMultiple, setOpenSectionIds]\n    );\n\n    // If any of the sections have their isOpen prop set to true initially,\n    // honor that.\n    // We never want to re-run this effect, even if deps change.\n    /* eslint-disable react-hooks/exhaustive-deps */\n    useEffect(() => {\n        const isOpenPropTruthy = child => child.props.isOpen;\n\n        const initialOpenSectionIds = new Set([]);\n        let firstOpenSectionId;\n\n        Children.toArray(children).forEach(child => {\n            if (isOpenPropTruthy(child)) {\n                const { id: childId } = child.props;\n\n                initialOpenSectionIds.add(childId);\n\n                if (!firstOpenSectionId) {\n                    firstOpenSectionId = childId;\n                }\n            }\n        });\n\n        // If there are multiple sections with isOpen props initially set to true\n        // and we only allow one, just use the first one.\n        if (!canOpenMultiple && initialOpenSectionIds.size > 1) {\n            initialOpenSectionIds.clear();\n            initialOpenSectionIds.add(firstOpenSectionId);\n        }\n\n        setOpenSectionIds(initialOpenSectionIds);\n    }, []);\n    /* eslint-enable react-hooks/exhaustive-deps */\n\n    return {\n        handleSectionToggle,\n        openSectionIds\n    };\n};\n"]}