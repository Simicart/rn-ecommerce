{"version":3,"sources":["useCountry.js"],"names":["useCountry","props","queries","getCountriesQuery","data","error","loading","formattedCountriesData","label","value","countries","map","country","full_name_english","two_letter_abbreviation","sort","a","b"],"mappings":";;;;;;;AAAA;;AAEO,MAAMA,UAAU,GAAGC,KAAK,IAAI;AAC/B,QAAM;AACFC,IAAAA,OAAO,EAAE;AAAEC,MAAAA;AAAF;AADP,MAEFF,KAFJ;AAIA,QAAM;AAAEG,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAA2B,sBAASH,iBAAT,CAAjC;AAEA,MAAII,sBAAsB,GAAG,CAAC;AAAEC,IAAAA,KAAK,EAAE,sBAAT;AAAiCC,IAAAA,KAAK,EAAE;AAAxC,GAAD,CAA7B;;AACA,MAAI,CAACH,OAAD,IAAY,CAACD,KAAjB,EAAwB;AACpB,UAAM;AAAEK,MAAAA;AAAF,QAAgBN,IAAtB;AACAG,IAAAA,sBAAsB,GAAGG,SAAS,CAACC,GAAV,CAAcC,OAAO,KAAK;AAC/C;AACAJ,MAAAA,KAAK,EAAEI,OAAO,CAACC,iBAAR,IAA6BD,OAAO,CAACE,uBAFG;AAG/CL,MAAAA,KAAK,EAAEG,OAAO,CAACE;AAHgC,KAAL,CAArB,CAAzB;AAKAP,IAAAA,sBAAsB,CAACQ,IAAvB,CAA4B,CAACC,CAAD,EAAIC,CAAJ,KAAWD,CAAC,CAACR,KAAF,GAAUS,CAAC,CAACT,KAAZ,GAAoB,CAAC,CAArB,GAAyB,CAAhE;AACH;;AAED,SAAO;AACHE,IAAAA,SAAS,EAAEH,sBADR;AAEHD,IAAAA;AAFG,GAAP;AAIH,CAtBM","sourcesContent":["import { useQuery } from '@apollo/client';\n\nexport const useCountry = props => {\n    const {\n        queries: { getCountriesQuery }\n    } = props;\n\n    const { data, error, loading } = useQuery(getCountriesQuery);\n\n    let formattedCountriesData = [{ label: 'Loading Countries...', value: '' }];\n    if (!loading && !error) {\n        const { countries } = data;\n        formattedCountriesData = countries.map(country => ({\n            // If a country is missing the full english name just show the abbreviation.\n            label: country.full_name_english || country.two_letter_abbreviation,\n            value: country.two_letter_abbreviation\n        }));\n        formattedCountriesData.sort((a, b) => (a.label < b.label ? -1 : 1));\n    }\n\n    return {\n        countries: formattedCountriesData,\n        loading\n    };\n};\n"]}