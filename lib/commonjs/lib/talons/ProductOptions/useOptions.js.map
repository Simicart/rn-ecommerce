{"version":3,"sources":["useOptions.js"],"names":["useOptions","props","onSelectionChange","selectedValues","handleSelectionChange","optionId","selection","selectedValueMap","Map","option_label","value_label","set"],"mappings":";;;;;;;AAAA;;AAEO,MAAMA,UAAU,GAAGC,KAAK,IAAI;AAC/B,QAAM;AAAEC,IAAAA,iBAAF;AAAqBC,IAAAA;AAArB,MAAwCF,KAA9C;AACA,QAAMG,qBAAqB,GAAG,wBAC1B,CAACC,QAAD,EAAWC,SAAX,KAAyB;AACrB,QAAIJ,iBAAJ,EAAuB;AACnBA,MAAAA,iBAAiB,CAACG,QAAD,EAAWC,SAAX,CAAjB;AACH;AACJ,GALyB,EAM1B,CAACJ,iBAAD,CAN0B,CAA9B;AASA,QAAMK,gBAAgB,GAAG,IAAIC,GAAJ,EAAzB;;AACA,OAAK,MAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,GAAX,IAA4CP,cAA5C,EAA4D;AACxDI,IAAAA,gBAAgB,CAACI,GAAjB,CAAqBF,YAArB,EAAmCC,WAAnC;AACH;;AAED,SAAO;AACHN,IAAAA,qBADG;AAEHG,IAAAA;AAFG,GAAP;AAIH,CApBM","sourcesContent":["import { useCallback } from 'react';\n\nexport const useOptions = props => {\n    const { onSelectionChange, selectedValues } = props;\n    const handleSelectionChange = useCallback(\n        (optionId, selection) => {\n            if (onSelectionChange) {\n                onSelectionChange(optionId, selection);\n            }\n        },\n        [onSelectionChange]\n    );\n\n    const selectedValueMap = new Map();\n    for (const { option_label, value_label } of selectedValues) {\n        selectedValueMap.set(option_label, value_label);\n    }\n\n    return {\n        handleSelectionChange,\n        selectedValueMap\n    };\n};\n"]}