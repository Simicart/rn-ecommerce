{"version":3,"sources":["useReceipt.js"],"names":["useReceipt","props","onClose","drawer","createAccount","resetReceipt","isSignedIn","history","prevDrawer","current","handleCreateAccount","handleViewOrderDetails"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;AACA;;AACA;;AAEO,MAAMA,UAAU,GAAGC,KAAK,IAAI;AAC/B,QAAM;AAAEC,IAAAA;AAAF,MAAcD,KAApB;AAEA,QAAM,CAAC;AAAEE,IAAAA;AAAF,GAAD,IAAe,yBAArB;AACA,QAAM,GAAG;AAAEC,IAAAA,aAAF;AAAiBC,IAAAA;AAAjB,GAAH,IAAsC,mCAA5C;AACA,QAAM,CAAC;AAAEC,IAAAA;AAAF,GAAD,IAAmB,2BAAzB;AACA,QAAMC,OAAO,GAAG,iCAAhB,CAN+B,CAQ/B;AACA;;AACA,QAAMC,UAAU,GAAG,mBAAO,IAAP,CAAnB;AACA,wBAAU,MAAM;AACZ,QAAIA,UAAU,CAACC,OAAX,KAAuB,MAAvB,IAAiCN,MAAM,KAAK,MAAhD,EAAwD;AACpDE,MAAAA,YAAY;AACZH,MAAAA,OAAO;AACV;;AACDM,IAAAA,UAAU,CAACC,OAAX,GAAqBN,MAArB;AACH,GAND,EAMG,CAACA,MAAD,EAASD,OAAT,EAAkBG,YAAlB,CANH;AAQA,QAAMK,mBAAmB,GAAG,wBAAY,MAAM;AAC1CN,IAAAA,aAAa,CAAC;AACVG,MAAAA;AADU,KAAD,CAAb;AAGH,GAJ2B,EAIzB,CAACH,aAAD,EAAgBG,OAAhB,CAJyB,CAA5B;AAMA,QAAMI,sBAAsB,GAAG,wBAAY,MAAM,CAC7C;AACH,GAF8B,EAE5B,EAF4B,CAA/B;AAIA,SAAO;AACHD,IAAAA,mBADG;AAEHC,IAAAA,sBAFG;AAGHL,IAAAA;AAHG,GAAP;AAKH,CAlCM","sourcesContent":["import { useCallback, useEffect, useRef } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { useCheckoutContext } from '@magento/peregrine/lib/context/checkout';\nimport { useUserContext } from '@magento/peregrine/lib/context/user';\nimport { useAppContext } from '@magento/peregrine/lib/context/app';\n\nexport const useReceipt = props => {\n    const { onClose } = props;\n\n    const [{ drawer }] = useAppContext();\n    const [, { createAccount, resetReceipt }] = useCheckoutContext();\n    const [{ isSignedIn }] = useUserContext();\n    const history = useHistory();\n\n    // When the drawer is closed reset the state of the receipt. We use a ref\n    // because drawer can change if the mask is clicked. Mask updates drawer.\n    const prevDrawer = useRef(null);\n    useEffect(() => {\n        if (prevDrawer.current === 'cart' && drawer !== 'cart') {\n            resetReceipt();\n            onClose();\n        }\n        prevDrawer.current = drawer;\n    }, [drawer, onClose, resetReceipt]);\n\n    const handleCreateAccount = useCallback(() => {\n        createAccount({\n            history\n        });\n    }, [createAccount, history]);\n\n    const handleViewOrderDetails = useCallback(() => {\n        // TODO: Implement/connect/redirect to order details page.\n    }, []);\n\n    return {\n        handleCreateAccount,\n        handleViewOrderDetails,\n        isSignedIn\n    };\n};\n"]}