{"version":3,"sources":["useShippingForm.js"],"names":["useShippingForm","props","availableShippingMethods","onCancel","onSubmit","initialValue","selectableShippingMethods","length","map","carrier_code","carrier_title","label","value","handleSubmit","shippingMethod","selectedShippingMethod","find","console","warn","handleCancel"],"mappings":";;;;;;;AAAA;;AACA;;;;;;;;;;;;;;;;AAgBO,MAAMA,eAAe,GAAGC,KAAK,IAAI;AACpC,QAAM;AAAEC,IAAAA,wBAAF;AAA4BC,IAAAA,QAA5B;AAAsCC,IAAAA;AAAtC,MAAmDH,KAAzD;AAEA,MAAII,YAAJ;AACA,MAAIC,yBAAJ;;AAEA,MAAIJ,wBAAwB,CAACK,MAA7B,EAAqC;AACjCD,IAAAA,yBAAyB,GAAGJ,wBAAwB,CAACM,GAAzB,CACxB,CAAC;AAAEC,MAAAA,YAAF;AAAgBC,MAAAA;AAAhB,KAAD,MAAsC;AAClCC,MAAAA,KAAK,EAAED,aAD2B;AAElCE,MAAAA,KAAK,EAAEH;AAF2B,KAAtC,CADwB,CAA5B;AAMAJ,IAAAA,YAAY,GACRJ,KAAK,CAACI,YAAN,IAAsBH,wBAAwB,CAAC,CAAD,CAAxB,CAA4BO,YADtD;AAEH,GATD,MASO;AACHH,IAAAA,yBAAyB,GAAG,EAA5B;AACAD,IAAAA,YAAY,GAAG,EAAf;AACH;;AAED,QAAMQ,YAAY,GAAG,wBACjB,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAwB;AACpB,UAAMC,sBAAsB,GAAGb,wBAAwB,CAACc,IAAzB,CAC3B,CAAC;AAAEP,MAAAA;AAAF,KAAD,KAAsBA,YAAY,KAAKK,cADZ,CAA/B;;AAIA,QAAI,CAACC,sBAAL,EAA6B;AACzBE,MAAAA,OAAO,CAACC,IAAR,uDACmDH,sBADnD;AAGAZ,MAAAA,QAAQ;AACX,KALD,MAKO;AACHC,MAAAA,QAAQ,CAAC;AACLU,QAAAA,cAAc,EAAEC;AADX,OAAD,CAAR;AAGH;AACJ,GAhBgB,EAiBjB,CAACb,wBAAD,EAA2BC,QAA3B,EAAqCC,QAArC,CAjBiB,CAArB;AAmBA,SAAO;AACHe,IAAAA,YAAY,EAAEhB,QADX;AAEHU,IAAAA,YAFG;AAGHR,IAAAA,YAHG;AAIHC,IAAAA;AAJG,GAAP;AAMH,CA7CM","sourcesContent":["import { useCallback } from 'react';\n/**\n * Returns props necessary to render a shipping form.\n *\n * @param {Object} props\n * @param {Object[]} props.availableShippingMethods an array of possible shipping methods\n * @param {function} onCancel callback for cancellation\n * @param {function} onSubmit callback for submission\n * @param {string} initialValue current selected shipping method value\n *\n * @returns {{\n *      handleCancel: function,\n *      handleSubmit: function,\n *      initialValue: object,\n *      selectableShippingMethods: array\n * }}\n */\nexport const useShippingForm = props => {\n    const { availableShippingMethods, onCancel, onSubmit } = props;\n\n    let initialValue;\n    let selectableShippingMethods;\n\n    if (availableShippingMethods.length) {\n        selectableShippingMethods = availableShippingMethods.map(\n            ({ carrier_code, carrier_title }) => ({\n                label: carrier_title,\n                value: carrier_code\n            })\n        );\n        initialValue =\n            props.initialValue || availableShippingMethods[0].carrier_code;\n    } else {\n        selectableShippingMethods = [];\n        initialValue = '';\n    }\n\n    const handleSubmit = useCallback(\n        ({ shippingMethod }) => {\n            const selectedShippingMethod = availableShippingMethods.find(\n                ({ carrier_code }) => carrier_code === shippingMethod\n            );\n\n            if (!selectedShippingMethod) {\n                console.warn(\n                    `Could not find the selected shipping method ${selectedShippingMethod} in the list of available shipping methods.`\n                );\n                onCancel();\n            } else {\n                onSubmit({\n                    shippingMethod: selectedShippingMethod\n                });\n            }\n        },\n        [availableShippingMethods, onCancel, onSubmit]\n    );\n    return {\n        handleCancel: onCancel,\n        handleSubmit,\n        initialValue,\n        selectableShippingMethods\n    };\n};\n"]}