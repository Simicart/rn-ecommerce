{"version":3,"sources":["useSummary.js"],"names":["mapBillingAddressData","rawBillingAddressData","street","country","region","street1","street2","code","state","useSummary","props","queries","typePolicies","getSummaryData","cartId","data","summaryData","loading","summaryDataLoading","skip","variables","billingAddress","cart","isBillingAddressSame","paymentNonce","selectedPaymentMethod","selected_payment_method","isLoading"],"mappings":";;;;;;;AAAA;;AAEA;;AACA;;AAEA,MAAMA,qBAAqB,GAAGC,qBAAqB,IAAI;AACnD,MAAIA,qBAAJ,EAA2B;AACvB,UAAM;AAAEC,MAAAA,MAAF;AAAUC,MAAAA,OAAV;AAAmBC,MAAAA;AAAnB,QAA8BH,qBAApC;AAEA,WAAO,EACH,GAAGA,qBADA;AAEHI,MAAAA,OAAO,EAAEH,MAAM,CAAC,CAAD,CAFZ;AAGHI,MAAAA,OAAO,EAAEJ,MAAM,CAAC,CAAD,CAHZ;AAIHC,MAAAA,OAAO,EAAEA,OAAO,CAACI,IAJd;AAKHC,MAAAA,KAAK,EAAEJ,MAAM,CAACG;AALX,KAAP;AAOH,GAVD,MAUO;AACH,WAAO,EAAP;AACH;AACJ,CAdD;AAgBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCO,MAAME,UAAU,GAAGC,KAAK,IAAI;AAC/B,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAA4BF,KAAlC;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAqBF,OAA3B;AAEA,kCAAgBC,YAAhB;AAEA;;;;AAIA,QAAM,CAAC;AAAEE,IAAAA;AAAF,GAAD,IAAe,2BAArB;AAEA;;;;AAIA,QAAM;AAAEC,IAAAA,IAAI,EAAEC,WAAR;AAAqBC,IAAAA,OAAO,EAAEC;AAA9B,MAAqD,sBACvDL,cADuD,EAEvD;AACIM,IAAAA,IAAI,EAAE,CAACL,MADX;AAEIM,IAAAA,SAAS,EAAE;AAAEN,MAAAA;AAAF;AAFf,GAFuD,CAA3D;AAQA,QAAMO,cAAc,GAAGL,WAAW,GAC5BhB,qBAAqB,CAACgB,WAAW,CAACM,IAAZ,CAAiBD,cAAlB,CADO,GAE5B,EAFN;AAIA,QAAME,oBAAoB,GAAGP,WAAW,GAClCA,WAAW,CAACM,IAAZ,CAAiBC,oBADiB,GAElC,IAFN;AAIA,QAAMC,YAAY,GAAGR,WAAW,GAAGA,WAAW,CAACM,IAAZ,CAAiBE,YAApB,GAAmC,IAAnE;AAEA,QAAMC,qBAAqB,GAAGT,WAAW,GACnCA,WAAW,CAACM,IAAZ,CAAiBI,uBADkB,GAEnC,IAFN;AAIA,SAAO;AACHL,IAAAA,cADG;AAEHE,IAAAA,oBAFG;AAGHI,IAAAA,SAAS,EAAET,kBAHR;AAIHM,IAAAA,YAJG;AAKHC,IAAAA;AALG,GAAP;AAOH,CA7CM","sourcesContent":["import { useQuery } from '@apollo/client';\n\nimport { useTypePolicies } from '@magento/peregrine';\nimport { useCartContext } from '../../../context/cart';\n\nconst mapBillingAddressData = rawBillingAddressData => {\n    if (rawBillingAddressData) {\n        const { street, country, region } = rawBillingAddressData;\n\n        return {\n            ...rawBillingAddressData,\n            street1: street[0],\n            street2: street[1],\n            country: country.code,\n            state: region.code\n        };\n    } else {\n        return {};\n    }\n};\n\n/**\n * Talon to handle summary component in payment information section of\n * the checkout page.\n *\n * @param {DocumentNode} props.queries.getSummaryData gets data from the server for rendering this component\n *\n * @returns {\n *   billingAddress: {\n *      firstName: String,\n *      lastName: String,\n *      country: String,\n *      street1: String,\n *      street2: String,\n *      city: String,\n *      state: String,\n *      postalCode: String,\n *   },\n *   paymentNonce: {\n *      type: String,\n *      description: String,\n *      details: {\n *          cardType: String,\n *          lastFour: String,\n *          lastTwo: String\n *      },\n *   },\n *   isBillingAddressSame: Boolean,\n *   isLoading: Boolean,\n *   selectedPaymentMethod: {\n *      code: String,\n *      title: String\n *   }\n * }\n */\nexport const useSummary = props => {\n    const { queries, typePolicies } = props;\n    const { getSummaryData } = queries;\n\n    useTypePolicies(typePolicies);\n\n    /**\n     * Definitions\n     */\n\n    const [{ cartId }] = useCartContext();\n\n    /**\n     * Queries\n     */\n\n    const { data: summaryData, loading: summaryDataLoading } = useQuery(\n        getSummaryData,\n        {\n            skip: !cartId,\n            variables: { cartId }\n        }\n    );\n\n    const billingAddress = summaryData\n        ? mapBillingAddressData(summaryData.cart.billingAddress)\n        : {};\n\n    const isBillingAddressSame = summaryData\n        ? summaryData.cart.isBillingAddressSame\n        : true;\n\n    const paymentNonce = summaryData ? summaryData.cart.paymentNonce : null;\n\n    const selectedPaymentMethod = summaryData\n        ? summaryData.cart.selected_payment_method\n        : null;\n\n    return {\n        billingAddress,\n        isBillingAddressSame,\n        isLoading: summaryDataLoading,\n        paymentNonce,\n        selectedPaymentMethod\n    };\n};\n"]}