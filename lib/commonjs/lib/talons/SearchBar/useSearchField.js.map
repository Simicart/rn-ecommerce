{"version":3,"sources":["useSearchField.js"],"names":["useSearchField","props","isSearchOpen","inputRef","value","formApi","resetForm","reset","current","focus","urlTerm","location","setValue"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;AAEA;;;AAGO,MAAMA,cAAc,GAAGC,KAAK,IAAI;AACnC,QAAM;AAAEC,IAAAA;AAAF,MAAmBD,KAAzB;AAEA,QAAME,QAAQ,GAAG,oBAAjB;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAY,6BAAc,cAAd,CAAlB;AACA,QAAMC,OAAO,GAAG,2BAAhB;AAEA,QAAMC,SAAS,GAAG,wBAAY,MAAM;AAChCD,IAAAA,OAAO,CAACE,KAAR;AACH,GAFiB,EAEf,CAACF,OAAD,CAFe,CAAlB,CAPmC,CAWnC;;AACA,wBAAU,MAAM;AACZ,QAAIH,YAAY,IAAIC,QAAQ,CAACK,OAA7B,EAAsC;AAClCL,MAAAA,QAAQ,CAACK,OAAT,CAAiBC,KAAjB;AACH;AACJ,GAJD,EAIG,CAACP,YAAD,CAJH,EAZmC,CAkBnC;AACA;;AACA;;AACA,wBAAU,MAAM;AACZ,UAAMQ,OAAO,GAAG,oCAAe,OAAf,EAAwBC,QAAxB,CAAhB;;AAEA,QAAI,CAACN,OAAD,IAAY,CAACK,OAAjB,EAA0B;AACtB;AACH;;AAEDL,IAAAA,OAAO,CAACO,QAAR,CAAiB,cAAjB,EAAiCF,OAAjC;AACH,GARD,EAQG,EARH;AASA;;AAEA,SAAO;AACHP,IAAAA,QADG;AAEHG,IAAAA,SAFG;AAGHF,IAAAA;AAHG,GAAP;AAKH,CArCM","sourcesContent":["import { useCallback, useEffect, useRef } from 'react';\nimport { useFieldState, useFormApi } from 'informed';\n\nimport { getSearchParam } from '@magento/peregrine/lib/hooks/useSearchParam';\n\n/**\n * Returns props necessary to render a SearchField component.\n */\nexport const useSearchField = props => {\n    const { isSearchOpen } = props;\n\n    const inputRef = useRef();\n    const { value } = useFieldState('search_query');\n    const formApi = useFormApi();\n\n    const resetForm = useCallback(() => {\n        formApi.reset();\n    }, [formApi]);\n\n    // When the search field is opened focus on the input.\n    useEffect(() => {\n        if (isSearchOpen && inputRef.current) {\n            inputRef.current.focus();\n        }\n    }, [isSearchOpen]);\n\n    // Pre-populate the search field with the search term from the URL.\n    // We purposefully only ever run this effect on initial mount.\n    /* eslint-disable react-hooks/exhaustive-deps */\n    useEffect(() => {\n        const urlTerm = getSearchParam('query', location);\n\n        if (!formApi || !urlTerm) {\n            return;\n        }\n\n        formApi.setValue('search_query', urlTerm);\n    }, []);\n    /* eslint-enable react-hooks/exhaustive-deps */\n\n    return {\n        inputRef,\n        resetForm,\n        value\n    };\n};\n"]}