{"version":3,"sources":["useSuggestedCategory.js"],"names":["getLocation","searchValue","categoryId","label","uri","URL","window","location","searchParams","set","DELIMITER","pathname","search","useSuggestedCategory","props","onNavigate","destination","handleClick"],"mappings":";;;;;;;AAAA;;AACA;;AACA;AACA,MAAMA,WAAW,GAAG,CAACC,WAAD,EAAcC,UAAd,EAA0BC,KAA1B,KAAoC;AACpD;AACA,QAAMC,GAAG,GAAG,IAAIC,GAAJ,CAAQ,cAAR,EAAwBC,MAAM,CAACC,QAA/B,CAAZ,CAFoD,CAIpD;;AACAH,EAAAA,GAAG,CAACI,YAAJ,CAAiBC,GAAjB,CAAqB,OAArB,EAA8BR,WAA9B;AACAG,EAAAA,GAAG,CAACI,YAAJ,CAAiBC,GAAjB,CACI,qBADJ,YAEON,KAFP,SAEeO,kBAFf,SAE2BR,UAF3B;AAKA,QAAM;AAAES,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAuBR,GAA7B,CAXoD,CAapD;;AACA,SAAO;AAAEO,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAAP;AACH,CAfD;AAiBA;;;;;;;;;;AAQO,MAAMC,oBAAoB,GAAGC,KAAK,IAAI;AACzC,QAAM;AAAEZ,IAAAA,UAAF;AAAcC,IAAAA,KAAd;AAAqBY,IAAAA,UAArB;AAAiCd,IAAAA;AAAjC,MAAiDa,KAAvD;AACA,QAAME,WAAW,GAAGhB,WAAW,CAACC,WAAD,EAAcC,UAAd,EAA0BC,KAA1B,CAA/B;AAEA,QAAMc,WAAW,GAAG,wBAAY,MAAM;AAClC,QAAI,OAAOF,UAAP,KAAsB,UAA1B,EAAsC;AAClCA,MAAAA,UAAU;AACb;AACJ,GAJmB,EAIjB,CAACA,UAAD,CAJiB,CAApB;AAMA,SAAO;AACHC,IAAAA,WADG;AAEHC,IAAAA;AAFG,GAAP;AAIH,CAdM","sourcesContent":["import { useCallback } from 'react';\nimport { DELIMITER } from '../FilterModal/helpers';\n// TODO: derive from store config when available\nconst getLocation = (searchValue, categoryId, label) => {\n    // start with the current uri\n    const uri = new URL('/search.html', window.location);\n\n    // update the query params\n    uri.searchParams.set('query', searchValue);\n    uri.searchParams.set(\n        'category_id[filter]',\n        `${label}${DELIMITER}${categoryId}`\n    );\n\n    const { pathname, search } = uri;\n\n    // return only the pieces React Router wants\n    return { pathname, search };\n};\n\n/**\n * Return props necessary to render a SuggestedCategory component.\n *\n * @param {Object} props\n * @param {String} props.categoryId - category\n * @param {Function} props.onNavigate - callback to fire on link click\n * @param {String} props.searchValue - search term\n */\nexport const useSuggestedCategory = props => {\n    const { categoryId, label, onNavigate, searchValue } = props;\n    const destination = getLocation(searchValue, categoryId, label);\n\n    const handleClick = useCallback(() => {\n        if (typeof onNavigate === 'function') {\n            onNavigate();\n        }\n    }, [onNavigate]);\n\n    return {\n        destination,\n        handleClick\n    };\n};\n"]}