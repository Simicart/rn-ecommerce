{"version":3,"sources":["useStockStatusMessage.js"],"names":["useStockStatusMessage","props","cartItems","hasOutOfStockItem","isOutOfStock","find","cartItem","product","stock_status","stockStatus"],"mappings":";;;;;;;AAAA;;AAEO,MAAMA,qBAAqB,GAAGC,KAAK,IAAI;AAC1C,QAAM;AAAEC,IAAAA;AAAF,MAAgBD,KAAtB;AAEA,QAAME,iBAAiB,GAAG,oBAAQ,MAAM;AACpC,QAAID,SAAJ,EAAe;AACX,YAAME,YAAY,GAAGF,SAAS,CAACG,IAAV,CAAeC,QAAQ,IAAI;AAC5C,cAAM;AAAEC,UAAAA;AAAF,YAAcD,QAApB;AACA,cAAM;AAAEE,UAAAA,YAAY,EAAEC;AAAhB,YAAgCF,OAAtC;AAEA,eAAOE,WAAW,KAAK,cAAvB;AACH,OALoB,CAArB;AAOA,aAAO,CAAC,CAACL,YAAT;AACH;AACJ,GAXyB,EAWvB,CAACF,SAAD,CAXuB,CAA1B;AAaA,SAAO;AAAEC,IAAAA;AAAF,GAAP;AACH,CAjBM","sourcesContent":["import { useMemo } from 'react';\n\nexport const useStockStatusMessage = props => {\n    const { cartItems } = props;\n\n    const hasOutOfStockItem = useMemo(() => {\n        if (cartItems) {\n            const isOutOfStock = cartItems.find(cartItem => {\n                const { product } = cartItem;\n                const { stock_status: stockStatus } = product;\n\n                return stockStatus === 'OUT_OF_STOCK';\n            });\n\n            return !!isOutOfStock;\n        }\n    }, [cartItems]);\n\n    return { hasOutOfStockItem };\n};\n"]}