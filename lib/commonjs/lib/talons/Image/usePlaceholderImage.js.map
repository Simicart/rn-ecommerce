{"version":3,"sources":["usePlaceholderImage.js"],"names":["usePlaceholderImage","props","displayPlaceholder","imageHasError","imageIsLoaded","hidePlaceholder","shouldRenderPlaceholder"],"mappings":";;;;;;;AAAA;;;;;;;;AAQO,MAAMA,mBAAmB,GAAGC,KAAK,IAAI;AACxC,QAAM;AAAEC,IAAAA,kBAAF;AAAsBC,IAAAA,aAAtB;AAAqCC,IAAAA;AAArC,MAAuDH,KAA7D,CADwC,CAGxC;AACA;;AACA,QAAMI,eAAe,GACjB,CAACH,kBAAD,IAAwBE,aAAa,IAAI,CAACD,aAD9C;AAEA,QAAMG,uBAAuB,GAAG,CAACD,eAAjC;AAEA,SAAO;AACHC,IAAAA;AADG,GAAP;AAGH,CAZM","sourcesContent":["/**\n * The talon for working with PlaceholderImages.\n * Determines whether the visual placeholder should be rendered or not.\n *\n * @param {bool}     props.displayPlaceholder whether or not to display a visual placeholder.\n * @param {string}   props.imageHasError there was an error loading the actual image.\n * @param {string}   props.imageIsLoaded the actual image is loaded.\n */\nexport const usePlaceholderImage = props => {\n    const { displayPlaceholder, imageHasError, imageIsLoaded } = props;\n\n    // Render the placeholder unless we've been told not to,\n    // or we've already loaded without error.\n    const hidePlaceholder =\n        !displayPlaceholder || (imageIsLoaded && !imageHasError);\n    const shouldRenderPlaceholder = !hidePlaceholder;\n\n    return {\n        shouldRenderPlaceholder\n    };\n};\n"]}