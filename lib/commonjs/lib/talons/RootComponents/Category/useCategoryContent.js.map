{"version":3,"sources":["useCategoryContent.js"],"names":["DRAWER_NAME","pageSize","placeholderItems","Array","from","length","fill","useCategoryContent","props","categoryId","data","queries","getProductFiltersByCategory","loadFilters","setLoadFilters","toggleDrawer","handleLoadFilters","handleOpenFilters","getFilters","filterData","variables","categoryIdFilter","eq","filters","products","aggregations","items","totalPagesFromData","page_info","total_pages","categoryName","category","name","categoryDescription","description","pageTitle","STORE_NAME"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEA,MAAMA,WAAW,GAAG,QAApB,C,CACA;AACA;;AACA,MAAMC,QAAQ,GAAG,CAAjB;AACA,MAAMC,gBAAgB,GAAGC,KAAK,CAACC,IAAN,CAAW;AAAEC,EAAAA,MAAM,EAAEJ;AAAV,CAAX,EAAiCK,IAAjC,CAAsC,IAAtC,CAAzB;AAEA;;;;;;;;;;;;;;;;AAeO,MAAMC,kBAAkB,GAAGC,KAAK,IAAI;AACvC,QAAM;AACFC,IAAAA,UADE;AAEFC,IAAAA,IAFE;AAGFC,IAAAA,OAAO,EAAE;AAAEC,MAAAA;AAAF;AAHP,MAIFJ,KAJJ;AAMA,QAAM,CAACK,WAAD,EAAcC,cAAd,IAAgC,qBAAS,KAAT,CAAtC;AACA,QAAM,GAAG;AAAEC,IAAAA;AAAF,GAAH,IAAuB,yBAA7B;AAEA,QAAMC,iBAAiB,GAAG,wBAAY,MAAM;AACxCF,IAAAA,cAAc,CAAC,IAAD,CAAd;AACH,GAFyB,EAEvB,CAACA,cAAD,CAFuB,CAA1B;AAGA,QAAMG,iBAAiB,GAAG,wBAAY,MAAM;AACxCH,IAAAA,cAAc,CAAC,IAAD,CAAd;AACAC,IAAAA,YAAY,CAACf,WAAD,CAAZ;AACH,GAHyB,EAGvB,CAACc,cAAD,EAAiBC,YAAjB,CAHuB,CAA1B;AAKA,QAAM,CAACG,UAAD,EAAa;AAAER,IAAAA,IAAI,EAAES;AAAR,GAAb,IAAqC,0BACvCP,2BADuC,CAA3C;AAIA,wBAAU,MAAM;AACZ,QAAIH,UAAJ,EAAgB;AACZS,MAAAA,UAAU,CAAC;AACPE,QAAAA,SAAS,EAAE;AACPC,UAAAA,gBAAgB,EAAE;AACdC,YAAAA,EAAE,EAAEb;AADU;AADX;AADJ,OAAD,CAAV;AAOH;AACJ,GAVD,EAUG,CAACA,UAAD,EAAaS,UAAb,CAVH;AAYA,QAAMK,OAAO,GAAGJ,UAAU,GAAGA,UAAU,CAACK,QAAX,CAAoBC,YAAvB,GAAsC,IAAhE;AACA,QAAMC,KAAK,GAAGhB,IAAI,GAAGA,IAAI,CAACc,QAAL,CAAcE,KAAjB,GAAyBxB,gBAA3C;AACA,QAAMyB,kBAAkB,GAAGjB,IAAI,GACzBA,IAAI,CAACc,QAAL,CAAcI,SAAd,CAAwBC,WADC,GAEzB,IAFN;AAGA,QAAMC,YAAY,GAAGpB,IAAI,GAAGA,IAAI,CAACqB,QAAL,CAAcC,IAAjB,GAAwB,IAAjD;AACA,QAAMC,mBAAmB,GAAGvB,IAAI,GAAGA,IAAI,CAACqB,QAAL,CAAcG,WAAjB,GAA+B,IAA/D,CAxCuC,CAyCvC;;AACA,QAAMC,SAAS,GAAGL,YAAY,aACrBA,YADqB,gBACHM,UADG,IAExBA,UAFN;AAIA,SAAO;AACHN,IAAAA,YADG;AAEHG,IAAAA,mBAFG;AAGHV,IAAAA,OAHG;AAIHP,IAAAA,iBAJG;AAKHC,IAAAA,iBALG;AAMHS,IAAAA,KANG;AAOHb,IAAAA,WAPG;AAQHsB,IAAAA,SARG;AASHR,IAAAA;AATG,GAAP;AAWH,CAzDM","sourcesContent":["import { useCallback, useEffect, useState } from 'react';\nimport { useLazyQuery } from '@apollo/client';\nimport { useAppContext } from '@magento/peregrine/lib/context/app';\n\nconst DRAWER_NAME = 'filter';\n// TODO: This can be replaced by the value from `storeConfig when the PR,\n// https://github.com/magento/graphql-ce/pull/650, is released.\nconst pageSize = 6;\nconst placeholderItems = Array.from({ length: pageSize }).fill(null);\n\n/**\n * Returns props necessary to render the categoryContent component.\n *\n * @param {object} props.data - The results of a getCategory GraphQL query.\n *\n * @returns {object} result\n * @returns {number} result.categoryId - This category's ID.\n * @returns {string} result.categoryName - This category's name.\n * @returns {object} result.filters - The filters object.\n * @returns {func}   result.handleLoadFilters - A callback function to signal the user's intent to interact with the filters.\n * @returns {func}   result.handleOpenFilters - A callback function that actually opens the filter drawer.\n * @returns {object} result.items - The items in this category.\n * @returns {bool}   result.loadFilters - Whether or not the user has signalled their intent to interact with the filters.\n * @returns {string} result.pageTitle - The text to put in the browser tab for this page.\n */\nexport const useCategoryContent = props => {\n    const {\n        categoryId,\n        data,\n        queries: { getProductFiltersByCategory }\n    } = props;\n\n    const [loadFilters, setLoadFilters] = useState(false);\n    const [, { toggleDrawer }] = useAppContext();\n\n    const handleLoadFilters = useCallback(() => {\n        setLoadFilters(true);\n    }, [setLoadFilters]);\n    const handleOpenFilters = useCallback(() => {\n        setLoadFilters(true);\n        toggleDrawer(DRAWER_NAME);\n    }, [setLoadFilters, toggleDrawer]);\n\n    const [getFilters, { data: filterData }] = useLazyQuery(\n        getProductFiltersByCategory\n    );\n\n    useEffect(() => {\n        if (categoryId) {\n            getFilters({\n                variables: {\n                    categoryIdFilter: {\n                        eq: categoryId\n                    }\n                }\n            });\n        }\n    }, [categoryId, getFilters]);\n\n    const filters = filterData ? filterData.products.aggregations : null;\n    const items = data ? data.products.items : placeholderItems;\n    const totalPagesFromData = data\n        ? data.products.page_info.total_pages\n        : null;\n    const categoryName = data ? data.category.name : null;\n    const categoryDescription = data ? data.category.description : null;\n    // Note: STORE_NAME is injected by Webpack at build time.\n    const pageTitle = categoryName\n        ? `${categoryName} - ${STORE_NAME}`\n        : STORE_NAME;\n\n    return {\n        categoryName,\n        categoryDescription,\n        filters,\n        handleLoadFilters,\n        handleOpenFilters,\n        items,\n        loadFilters,\n        pageTitle,\n        totalPagesFromData\n    };\n};\n"]}