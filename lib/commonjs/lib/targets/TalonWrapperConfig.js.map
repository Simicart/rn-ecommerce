{"version":3,"sources":["TalonWrapperConfig.js"],"names":["path","require","TalonWrapperConfig","constructor","addTransforms","ProductFullDetail","useProductFullDetail","WrappableTalon","App","useApp","module","exports","addTransform","talonFile","fileToTransform","join","exportName","basename","wrapWith","wrapperModule","type","transformModule","options"],"mappings":";;AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;AAEA;;;;;;AAIA,MAAMC,kBAAN,CAAyB;AACrB;AACAC,EAAAA,WAAW,CAACC,aAAD,EAAgB;AACvB;;;;AAIA,SAAKC,iBAAL,GAAyB;AACrB;;;;;AAKAC,MAAAA,oBAAoB,EAAE,IAAIC,cAAJ,CAClBH,aADkB,EAElB,wCAFkB;AAND,KAAzB;AAWA;;;;;AAIA,SAAKI,GAAL,GAAW;AACP;;;;AAIAC,MAAAA,MAAM,EAAE,IAAIF,cAAJ,CAAmBH,aAAnB,EAAkC,YAAlC;AALD,KAAX;AAOH;;AA7BoB;;AAgCzBM,MAAM,CAACC,OAAP,GAAiBT,kBAAjB;AAEA;;;;;;AAKA,MAAMK,cAAN,CAAqB;AACjB;AACAJ,EAAAA,WAAW,CAACS,YAAD,EAAeC,SAAf,EAA0B;AACjC,SAAKD,YAAL,GAAoBA,YAApB;AACA,SAAKE,eAAL,GAAuBd,IAAI,CAACe,IAAL,CAAU,eAAV,EAA2BF,SAA3B,CAAvB;AACA,SAAKG,UAAL,GAAkBhB,IAAI,CAACiB,QAAL,CAAcJ,SAAd,EAAyB,KAAzB,CAAlB;AACH;AACD;;;;;;;AAKAK,EAAAA,QAAQ,CAACC,aAAD,EAAgB;AACpB,SAAKP,YAAL,CAAkB;AACdQ,MAAAA,IAAI,EAAE,QADQ;AAEdN,MAAAA,eAAe,EAAE,KAAKA,eAFR;AAGdO,MAAAA,eAAe,EACX,iEAJU;AAKdC,MAAAA,OAAO,EAAE;AACLH,QAAAA,aADK;AAELH,QAAAA,UAAU,EAAE,KAAKA;AAFZ;AALK,KAAlB;AAUH;;AAvBgB","sourcesContent":["const path = require('path');\n\n/**\n * A registry of Peregrine talons you can wrap custom code around. An instance\n * of this class is made available when you use Peregrine's `talons` target.\n */\nclass TalonWrapperConfig {\n    /** @hideconstructor */\n    constructor(addTransforms) {\n        /**\n         * Provides access to the talon used in Venia's ProductFullDetail UI component.\n         *  @instance\n         */\n        this.ProductFullDetail = {\n            /**\n             * {@link WrappableTalon} object for the `useProductFullDetail()` talon\n             *\n             * @type {WrappableTalon}\n             */\n            useProductFullDetail: new WrappableTalon(\n                addTransforms,\n                'ProductFullDetail/useProductFullDetail'\n            )\n        };\n        /**\n         * Provides access to the talon used in Venia's App UI component.\n         * @instance\n         */\n        this.App = {\n            /**\n             * useApp {@link WrappableTalon} object for the `useApp()` talon\n             * @type {WrappableTalon}\n             */\n            useApp: new WrappableTalon(addTransforms, 'App/useApp')\n        };\n    }\n}\n\nmodule.exports = TalonWrapperConfig;\n\n/**\n * A particular Peregrine talon implementation which can be decorated with\n * custom JavaScript before it is added to the PWA bundle and imported by React\n * components.\n */\nclass WrappableTalon {\n    /** @hideconstructor */\n    constructor(addTransform, talonFile) {\n        this.addTransform = addTransform;\n        this.fileToTransform = path.join('./lib/talons/', talonFile);\n        this.exportName = path.basename(talonFile, '.js');\n    }\n    /**\n     * Pass this talon function through a [wrapper module](#wrapper_modules) before exporting it.\n     *\n     * @param {string} wrapperModule Import path to the wrapper module. Should be package-absolute.\n     */\n    wrapWith(wrapperModule) {\n        this.addTransform({\n            type: 'source',\n            fileToTransform: this.fileToTransform,\n            transformModule:\n                '@magento/pwa-buildpack/lib/WebpackTools/loaders/wrap-esm-loader',\n            options: {\n                wrapperModule,\n                exportName: this.exportName\n            }\n        });\n    }\n}\n"]}