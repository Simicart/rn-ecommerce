{"version":3,"sources":["samanai.js"],"names":["React","useState","View","useSelector","useAppContext","ColorfulButton","StateDisplayer","Samanai","props","valid","setValid","appState","appApi","toggleDrawer","closeDrawer","toggleSearch","setOnline","setOffline","setPageLoading","prevState"],"mappings":"AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,IAAR,QAAmB,cAAnB;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAAQC,aAAR,QAA4B,oBAA5B;AACA,OAAOC,cAAP,MAA2B,mCAA3B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAEpB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACU,QAAD,EAAWC,MAAX,IAAqBR,aAAa,EAAxC;AACA,QAAM;AACFS,IAAAA,YADE;AAEFC,IAAAA,WAFE;AAGFC,IAAAA,YAHE;AAIFC,IAAAA,SAJE;AAKFC,IAAAA,UALE;AAMFC,IAAAA;AANE,MAOFN,MAPJ;AASA,sBACI,oBAAC,IAAD,qBACI,oBAAC,cAAD;AAAgB,IAAA,IAAI,EAAED,QAAtB;AAAgC,IAAA,KAAK,EAAE;AAAvC,IADJ,eAEI,oBAAC,cAAD;AACI,IAAA,KAAK,EAAE,eADX;AAEI,IAAA,OAAO,EAAE,MAAM;AACXE,MAAAA,YAAY,CAACJ,KAAK,GAAG,SAAH,GAAe,SAArB,CAAZ;AACAC,MAAAA,QAAQ,CAAES,SAAD,IAAe,CAACA,SAAjB,CAAR;AACH;AALL,IAFJ,eASI,oBAAC,cAAD;AACI,IAAA,KAAK,EAAE,cADX;AAEI,IAAA,OAAO,EAAE,MAAM;AACXL,MAAAA,WAAW;AACd;AAJL,IATJ,eAeI,oBAAC,cAAD;AACI,IAAA,KAAK,EAAE,eADX;AAEI,IAAA,OAAO,EAAE,MAAM;AACXC,MAAAA,YAAY;AACf;AAJL,IAfJ,eAqBI,oBAAC,cAAD;AACI,IAAA,KAAK,EAAE,YADX;AAEI,IAAA,OAAO,EAAE,MAAM;AACXC,MAAAA,SAAS;AACZ;AAJL,IArBJ,eA2BI,oBAAC,cAAD;AACI,IAAA,KAAK,EAAE,aADX;AAEI,IAAA,OAAO,EAAE,MAAM;AACXC,MAAAA,UAAU;AACb;AAJL,IA3BJ,eAiCI,oBAAC,cAAD;AACI,IAAA,KAAK,EAAE,uBADX;AAEI,IAAA,OAAO,EAAE,MAAM;AACXC,MAAAA,cAAc,CAAC,IAAD,CAAd;AACH;AAJL,IAjCJ,eAuCI,oBAAC,cAAD;AACI,IAAA,KAAK,EAAE,wBADX;AAEI,IAAA,OAAO,EAAE,MAAM;AACXA,MAAAA,cAAc,CAAC,KAAD,CAAd;AACH;AAJL,IAvCJ,CADJ;AAgDH;;AAED,eAAeX,OAAf","sourcesContent":["import React, {useState} from 'react';\nimport {View} from 'react-native';\nimport {useSelector} from 'react-redux';\nimport {useAppContext} from '../lib/context/app';\nimport ColorfulButton from '../visualComponent/ColorfulButton';\nimport StateDisplayer from './stateDisplayer';\n\nfunction Samanai(props) {\n\n    const [valid, setValid] = useState(true);\n    const [appState, appApi] = useAppContext();\n    const {\n        toggleDrawer,\n        closeDrawer,\n        toggleSearch,\n        setOnline,\n        setOffline,\n        setPageLoading\n    } = appApi;\n\n    return (\n        <View>\n            <StateDisplayer data={appState} title={'App'}/>\n            <ColorfulButton\n                title={'TOGGLE_DRAWER'}\n                onPress={() => {\n                    toggleDrawer(valid ? 'samanai' : 'siminia');\n                    setValid((prevState) => !prevState);\n                }}\n            />\n            <ColorfulButton\n                title={'CLOSE_DRAWER'}\n                onPress={() => {\n                    closeDrawer();\n                }}\n            />\n            <ColorfulButton\n                title={'TOGGLE_SEARCH'}\n                onPress={() => {\n                    toggleSearch();\n                }}\n            />\n            <ColorfulButton\n                title={'SET_ONLINE'}\n                onPress={() => {\n                    setOnline();\n                }}\n            />\n            <ColorfulButton\n                title={'SET_OFFLINE'}\n                onPress={() => {\n                    setOffline();\n                }}\n            />\n            <ColorfulButton\n                title={'SET_PAGE_LOADING true'}\n                onPress={() => {\n                    setPageLoading(true);\n                }}\n            />\n            <ColorfulButton\n                title={'SET_PAGE_LOADING false'}\n                onPress={() => {\n                    setPageLoading(false);\n                }}\n            />\n        </View>\n    );\n}\n\nexport default Samanai;\n"]}