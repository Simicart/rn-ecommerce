{"version":3,"sources":["useSuggestions.js"],"names":["useCallback","useSuggestions","props","displayResult","filters","items","setVisible","visible","onNavigate","shouldRender","length","categories","categoryFilter","find","label","options"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AAEA;;;;;;;;;;AASA,OAAO,MAAMC,cAAc,GAAGC,KAAK,IAAI;AACnC,QAAM;AAAEC,IAAAA,aAAF;AAAiBC,IAAAA,OAAjB;AAA0BC,IAAAA,KAA1B;AAAiCC,IAAAA,UAAjC;AAA6CC,IAAAA;AAA7C,MAAyDL,KAA/D,CADmC,CAGnC;;AACA,QAAMM,UAAU,GAAGR,WAAW,CAAC,MAAM;AACjCM,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH,GAF6B,EAE3B,CAACA,UAAD,CAF2B,CAA9B,CAJmC,CAQnC;;AACA,QAAMG,YAAY,GAAG,CAAC,EAClBF,OAAO,IACPJ,aADA,IAEAC,OAFA,IAGAC,KAHA,IAIAA,KAAK,CAACK,MALY,CAAtB;AAOA,MAAIC,UAAU,GAAG,IAAjB,CAhBmC,CAkBnC;;AACA,MAAIF,YAAJ,EAAkB;AACd,UAAMG,cAAc,GAChBR,OAAO,CAACS,IAAR,CAAa,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAeA,KAAK,KAAK,UAAtC,KAAqD,EADzD;AAGAH,IAAAA,UAAU,GAAGC,cAAc,CAACG,OAAf,IAA0B,EAAvC;AACH;;AAED,SAAO;AACHJ,IAAAA,UADG;AAEHH,IAAAA,UAFG;AAGHC,IAAAA;AAHG,GAAP;AAKH,CA/BM","sourcesContent":["import { useCallback } from 'react';\n\n/**\n * Returns props necessary to render a Suggestions component.\n *\n * @param {Object} props\n * @param {Object} props.filters - filters applied to the search\n * @param {Object} props.items - product data from search results\n * @param {Function} props.setVisible - callback to set `visible` state\n * @param {Boolean} props.visible - whether the component is visible\n */\nexport const useSuggestions = props => {\n    const { displayResult, filters, items, setVisible, visible } = props;\n\n    // hide after navigating to a suggested product\n    const onNavigate = useCallback(() => {\n        setVisible(false);\n    }, [setVisible]);\n\n    // avoid rendering if data is empty\n    const shouldRender = !!(\n        visible &&\n        displayResult &&\n        filters &&\n        items &&\n        items.length\n    );\n    let categories = null;\n\n    // find categories, but only if the component is going to render\n    if (shouldRender) {\n        const categoryFilter =\n            filters.find(({ label }) => label === 'Category') || {};\n\n        categories = categoryFilter.options || [];\n    }\n\n    return {\n        categories,\n        onNavigate,\n        shouldRender\n    };\n};\n"]}