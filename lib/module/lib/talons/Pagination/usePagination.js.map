{"version":3,"sources":["usePagination.js"],"names":["useCallback","useMemo","usePagination","props","currentPage","setPage","totalPages","tileBuffer","getLeadTile","selectedTile","leftBound","rightBound","leadTile","Math","max","handleLeftSkip","leftSkip","handleRightSkip","rightSkip","min","handleNavBack","handleNavForward","isActiveLeft","isActiveRight","tiles","visibleBuffer","i","tile","push"],"mappings":"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","sourcesContent":["import { useCallback, useMemo } from 'react';\n\nexport const usePagination = props => {\n    const { currentPage, setPage, totalPages, tileBuffer = 2 } = props;\n\n    const getLeadTile = useCallback(\n        (currentPage, totalPages) => {\n            const selectedTile = currentPage;\n            const leftBound = 1 + tileBuffer;\n            const rightBound = totalPages - tileBuffer;\n\n            let leadTile = selectedTile - tileBuffer;\n            if (selectedTile < leftBound) {\n                leadTile = 1;\n            } else if (selectedTile > rightBound) {\n                leadTile = Math.max(totalPages - tileBuffer * 2, 1);\n            }\n            return leadTile;\n        },\n        [tileBuffer]\n    );\n\n    const handleLeftSkip = useCallback(() => {\n        const leadTile = getLeadTile(currentPage, totalPages);\n\n        const leftSkip = Math.max(1, leadTile - (tileBuffer + 1));\n\n        setPage(leftSkip);\n    }, [currentPage, getLeadTile, setPage, totalPages, tileBuffer]);\n\n    const handleRightSkip = useCallback(() => {\n        const leadTile = getLeadTile(currentPage, totalPages);\n        const rightSkip = Math.min(\n            totalPages,\n            leadTile + tileBuffer * 2 + (tileBuffer + 1)\n        );\n\n        setPage(rightSkip);\n    }, [currentPage, getLeadTile, setPage, totalPages, tileBuffer]);\n\n    const handleNavBack = useCallback(() => {\n        if (currentPage > 1) {\n            setPage(currentPage - 1);\n        }\n    }, [currentPage, setPage]);\n\n    const handleNavForward = useCallback(() => {\n        if (currentPage < totalPages) {\n            setPage(currentPage + 1);\n        }\n    }, [currentPage, setPage, totalPages]);\n\n    const isActiveLeft = currentPage !== 1;\n    const isActiveRight = currentPage !== totalPages;\n\n    const tiles = useMemo(() => {\n        const tiles = [];\n        const visibleBuffer = Math.min(tileBuffer * 2, totalPages - 1);\n        const leadTile = getLeadTile(currentPage, totalPages);\n\n        for (let i = leadTile; i <= leadTile + visibleBuffer; i++) {\n            const tile = i;\n            tiles.push(tile);\n        }\n        return tiles;\n    }, [currentPage, getLeadTile, totalPages, tileBuffer]);\n\n    return {\n        handleLeftSkip,\n        handleRightSkip,\n        handleNavBack,\n        handleNavForward,\n        isActiveLeft,\n        isActiveRight,\n        tiles\n    };\n};\n"]}