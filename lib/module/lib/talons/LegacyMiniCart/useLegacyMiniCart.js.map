{"version":3,"sources":["useLegacyMiniCart.js"],"names":["useCallback","useState","useAppContext","useCartContext","useCheckoutContext","useLegacyMiniCart","drawer","closeDrawer","cartState","cancelCheckout","isEditingItem","setIsEditingItem","step","setStep","derivedDetails","details","isLoading","isUpdatingItem","items","currencyCode","numItems","subtotal","shouldShowFooter","isEmpty","isMiniCartMaskOpen","isOpen","handleClose","handleBeginEditItem","handleEndEditItem","handleDismiss","cartItems"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;AAEA,SAASC,aAAT,QAA8B,oCAA9B;AACA,SAASC,cAAT,QAA+B,qCAA/B;AACA,SAASC,kBAAT,QAAmC,yCAAnC;AAEA,OAAO,MAAMC,iBAAiB,GAAG,MAAM;AACnC,QAAM,CAAC;AAAEC,IAAAA;AAAF,GAAD,EAAa;AAAEC,IAAAA;AAAF,GAAb,IAAgCL,aAAa,EAAnD;AACA,QAAM,CAACM,SAAD,IAAcL,cAAc,EAAlC;AACA,QAAM,GAAG;AAAEM,IAAAA;AAAF,GAAH,IAAyBL,kBAAkB,EAAjD;AAEA,QAAM,CAACM,aAAD,EAAgBC,gBAAhB,IAAoCV,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,MAAD,CAAhC;AAEA,QAAM;AAAEa,IAAAA,cAAF;AAAkBC,IAAAA,OAAlB;AAA2BC,IAAAA,SAA3B;AAAsCC,IAAAA;AAAtC,MAAyDT,SAA/D;AACA,QAAM;AAAEU,IAAAA;AAAF,MAAYH,OAAlB;AACA,QAAM;AAAEI,IAAAA,YAAF;AAAgBC,IAAAA,QAAhB;AAA0BC,IAAAA;AAA1B,MAAuCP,cAA7C;AAEA,QAAMQ,gBAAgB,GAClBV,IAAI,KAAK,SAAT,IACAA,IAAI,KAAK,MADT,IAEA,EAAGJ,SAAS,CAACe,OAAV,IAAqBX,IAAI,KAAK,MAA/B,IAA0CI,SAA1C,IAAuDN,aAAzD,CAHJ;AAKA,QAAMc,kBAAkB,GAAGZ,IAAI,KAAK,MAApC;AACA,QAAMa,MAAM,GAAGnB,MAAM,KAAK,MAA1B;AAEA,QAAMoB,WAAW,GAAG1B,WAAW,CAAC,MAAM;AAClCa,IAAAA,OAAO,CAAC,MAAD,CAAP;AACAF,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACAJ,IAAAA,WAAW;AACd,GAJ8B,EAI5B,CAACA,WAAD,EAAcM,OAAd,CAJ4B,CAA/B;AAMA,QAAMc,mBAAmB,GAAG3B,WAAW,CAAC,MAAM;AAC1CW,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACH,GAFsC,EAEpC,EAFoC,CAAvC;AAIA,QAAMiB,iBAAiB,GAAG5B,WAAW,CAAC,MAAM;AACxCW,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACH,GAFoC,EAElC,EAFkC,CAArC;AAIA,QAAMkB,aAAa,GAAG7B,WAAW,CAAC,MAAM;AACpCa,IAAAA,OAAO,CAAC,MAAD,CAAP;AACAJ,IAAAA,cAAc;AACjB,GAHgC,EAG9B,CAACA,cAAD,CAH8B,CAAjC;AAKA,SAAO;AACHqB,IAAAA,SAAS,EAAEZ,KADR;AAEHV,IAAAA,SAFG;AAGHW,IAAAA,YAHG;AAIHQ,IAAAA,mBAJG;AAKHE,IAAAA,aALG;AAMHD,IAAAA,iBANG;AAOHF,IAAAA,WAPG;AAQHhB,IAAAA,aARG;AASHM,IAAAA,SATG;AAUHQ,IAAAA,kBAVG;AAWHC,IAAAA,MAXG;AAYHR,IAAAA,cAZG;AAaHG,IAAAA,QAbG;AAcHP,IAAAA,OAdG;AAeHS,IAAAA,gBAfG;AAgBHV,IAAAA,IAhBG;AAiBHS,IAAAA;AAjBG,GAAP;AAmBH,CA1DM","sourcesContent":["import { useCallback, useState } from 'react';\n\nimport { useAppContext } from '@magento/peregrine/lib/context/app';\nimport { useCartContext } from '@magento/peregrine/lib/context/cart';\nimport { useCheckoutContext } from '@magento/peregrine/lib/context/checkout';\n\nexport const useLegacyMiniCart = () => {\n    const [{ drawer }, { closeDrawer }] = useAppContext();\n    const [cartState] = useCartContext();\n    const [, { cancelCheckout }] = useCheckoutContext();\n\n    const [isEditingItem, setIsEditingItem] = useState(false);\n    const [step, setStep] = useState('cart');\n\n    const { derivedDetails, details, isLoading, isUpdatingItem } = cartState;\n    const { items } = details;\n    const { currencyCode, numItems, subtotal } = derivedDetails;\n\n    const shouldShowFooter =\n        step === 'receipt' ||\n        step === 'form' ||\n        !((cartState.isEmpty && step === 'cart') || isLoading || isEditingItem);\n\n    const isMiniCartMaskOpen = step === 'form';\n    const isOpen = drawer === 'cart';\n\n    const handleClose = useCallback(() => {\n        setStep('cart');\n        setIsEditingItem(false);\n        closeDrawer();\n    }, [closeDrawer, setStep]);\n\n    const handleBeginEditItem = useCallback(() => {\n        setIsEditingItem(true);\n    }, []);\n\n    const handleEndEditItem = useCallback(() => {\n        setIsEditingItem(false);\n    }, []);\n\n    const handleDismiss = useCallback(() => {\n        setStep('cart');\n        cancelCheckout();\n    }, [cancelCheckout]);\n\n    return {\n        cartItems: items,\n        cartState,\n        currencyCode,\n        handleBeginEditItem,\n        handleDismiss,\n        handleEndEditItem,\n        handleClose,\n        isEditingItem,\n        isLoading,\n        isMiniCartMaskOpen,\n        isOpen,\n        isUpdatingItem,\n        numItems,\n        setStep,\n        shouldShowFooter,\n        step,\n        subtotal\n    };\n};\n"]}