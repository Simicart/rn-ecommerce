{"version":3,"sources":["useEditItem.js"],"names":["useEffect","useLazyQuery","useEditItem","props","item","query","runQuery","queryResult","data","error","loading","itemHasOptions","configurable_options","length","variables","sku","product","configItem","products","items","hasError","isLoading"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,YAAT,QAA6B,gBAA7B;AAEA,OAAO,MAAMC,WAAW,GAAGC,KAAK,IAAI;AAChC,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAkBF,KAAxB;AAEA,QAAM,CAACG,QAAD,EAAWC,WAAX,IAA0BN,YAAY,CAACI,KAAD,CAA5C;AACA,QAAM;AAAEG,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAA2BH,WAAjC;AAEA,QAAMI,cAAc,GAChBP,IAAI,CAACQ,oBAAL,IAA6BR,IAAI,CAACQ,oBAAL,CAA0BC,MAA1B,GAAmC,CADpE,CANgC,CAShC;AACA;;AACAb,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA,QAAIW,cAAJ,EAAoB;AAChBL,MAAAA,QAAQ,CAAC;AACLQ,QAAAA,SAAS,EAAE;AACPC,UAAAA,GAAG,EAAEX,IAAI,CAACY,OAAL,CAAaD;AADX;AADN,OAAD,CAAR;AAKH;AACJ,GATQ,EASN,CAACX,IAAD,EAAOO,cAAP,EAAuBL,QAAvB,CATM,CAAT,CAXgC,CAsBhC;;AACA,QAAMW,UAAU,GAAGT,IAAI,IAAIA,IAAI,CAACU,QAAb,IAAyBV,IAAI,CAACU,QAAL,CAAcC,KAAd,CAAoB,CAApB,CAA5C;AAEA,SAAO;AACHF,IAAAA,UADG;AAEHG,IAAAA,QAAQ,EAAE,CAAC,CAACX,KAFT;AAGHY,IAAAA,SAAS,EAAE,CAAC,CAACX,OAHV;AAIHC,IAAAA;AAJG,GAAP;AAMH,CA/BM","sourcesContent":["import { useEffect } from 'react';\nimport { useLazyQuery } from '@apollo/client';\n\nexport const useEditItem = props => {\n    const { item, query } = props;\n\n    const [runQuery, queryResult] = useLazyQuery(query);\n    const { data, error, loading } = queryResult;\n\n    const itemHasOptions =\n        item.configurable_options && item.configurable_options.length > 0;\n\n    // Run the query once on mount and again whenever the\n    // item being edited changes.\n    useEffect(() => {\n        // Only fetch item variants if it can have them.\n        if (itemHasOptions) {\n            runQuery({\n                variables: {\n                    sku: item.product.sku\n                }\n            });\n        }\n    }, [item, itemHasOptions, runQuery]);\n\n    // If we don't have possible options for the item just use an empty object\n    const configItem = data && data.products && data.products.items[0];\n\n    return {\n        configItem,\n        hasError: !!error,\n        isLoading: !!loading,\n        itemHasOptions\n    };\n};\n"]}