{"version":3,"sources":["useCategoryTile.js"],"names":["useMemo","previewImageSize","useCategoryTile","props","item","image","productImagePreview","imageObj","previewProduct","items","url","type","width","small_image","itemObject","name","url_key","url_suffix"],"mappings":"AAAA,SAASA,OAAT,QAAwB,OAAxB;AAEA,MAAMC,gBAAgB,GAAG,GAAzB;AAEA;;;;;;;;AAOA,OAAO,MAAMC,eAAe,GAAGC,KAAK,IAAI;AACpC,QAAM;AAAEC,IAAAA;AAAF,MAAWD,KAAjB;AACA,QAAM;AAAEE,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAiCF,IAAvC;AAEA,QAAMG,QAAQ,GAAGP,OAAO,CAAC,MAAM;AAC3B,UAAMQ,cAAc,GAAGF,mBAAmB,CAACG,KAApB,CAA0B,CAA1B,CAAvB;;AACA,QAAIJ,KAAJ,EAAW;AACP,aAAO;AACHK,QAAAA,GAAG,EAAEL,KADF;AAEHM,QAAAA,IAAI,EAAE,gBAFH;AAGHC,QAAAA,KAAK,EAAEX;AAHJ,OAAP;AAKH,KAND,MAMO,IAAIO,cAAJ,EAAoB;AACvB,aAAO;AACHE,QAAAA,GAAG,EAAEF,cAAc,CAACK,WADjB;AAEHF,QAAAA,IAAI,EAAE,eAFH;AAGHC,QAAAA,KAAK,EAAEX;AAHJ,OAAP;AAKH,KANM,MAMA;AACH,aAAO;AACHS,QAAAA,GAAG,EAAE,EADF;AAEHC,QAAAA,IAAI,EAAE,gBAFH;AAGHC,QAAAA,KAAK,EAAEX;AAHJ,OAAP;AAKH;AACJ,GArBuB,EAqBrB,CAACI,KAAD,EAAQC,mBAAR,CArBqB,CAAxB;AAuBA,QAAMQ,UAAU,GAAGd,OAAO,CACtB,OAAO;AACHe,IAAAA,IAAI,EAAEX,IAAI,CAACW,IADR;AAEHL,IAAAA,GAAG,aAAMN,IAAI,CAACY,OAAX,SAAqBZ,IAAI,CAACa,UAA1B;AAFA,GAAP,CADsB,EAKtB,CAACb,IAAD,CALsB,CAA1B;AAQA,SAAO;AACHC,IAAAA,KAAK,EAAEE,QADJ;AAEHH,IAAAA,IAAI,EAAEU;AAFH,GAAP;AAIH,CAvCM","sourcesContent":["import { useMemo } from 'react';\n\nconst previewImageSize = 480;\n\n/**\n * Returns props necessary to render a CategoryTile component.\n *\n * @returns {Object} props necessary to render a category tile\n * @returns {Object} .image - an object containing url, type and width for the category image\n * @returns {Object} .item - an object containing name and url for the category tile\n */\nexport const useCategoryTile = props => {\n    const { item } = props;\n    const { image, productImagePreview } = item;\n\n    const imageObj = useMemo(() => {\n        const previewProduct = productImagePreview.items[0];\n        if (image) {\n            return {\n                url: image,\n                type: 'image-category',\n                width: previewImageSize\n            };\n        } else if (previewProduct) {\n            return {\n                url: previewProduct.small_image,\n                type: 'image-product',\n                width: previewImageSize\n            };\n        } else {\n            return {\n                url: '',\n                type: 'image-category',\n                width: previewImageSize\n            };\n        }\n    }, [image, productImagePreview]);\n\n    const itemObject = useMemo(\n        () => ({\n            name: item.name,\n            url: `/${item.url_key}${item.url_suffix}`\n        }),\n        [item]\n    );\n\n    return {\n        image: imageObj,\n        item: itemObject\n    };\n};\n"]}