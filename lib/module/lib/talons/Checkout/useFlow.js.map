{"version":3,"sources":["useFlow.js"],"names":["useCallback","useMutation","useCartContext","useCheckoutContext","isObjectEmpty","isCheckoutReady","checkout","billingAddress","paymentData","shippingAddress","shippingMethod","objectsHaveData","every","data","stringsHaveData","length","useFlow","props","createCartMutation","onSubmitError","setStep","fetchCartId","cartState","checkoutState","beginCheckout","cancelCheckout","submitOrder","submitPaymentMethodAndBillingAddress","submitShippingMethod","handleBeginCheckout","handleCancelCheckout","handleSubmitOrder","e","handleCloseReceipt","checkoutDisabled","isSubmitting","isEmpty","isReady"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,WAAT,QAA4B,gBAA5B;AAEA,SAASC,cAAT,QAA+B,qCAA/B;AACA,SAASC,kBAAT,QAAmC,yCAAnC;AACA,OAAOC,aAAP,MAA0B,2CAA1B;;AAEA,MAAMC,eAAe,GAAGC,QAAQ,IAAI;AAChC,QAAM;AACFC,IAAAA,cADE;AAEFC,IAAAA,WAFE;AAGFC,IAAAA,eAHE;AAIFC,IAAAA;AAJE,MAKFJ,QALJ;AAOA,QAAMK,eAAe,GAAG,CACpBJ,cADoB,EAEpBC,WAFoB,EAGpBC,eAHoB,EAItBG,KAJsB,CAIhBC,IAAI,IAAI;AACZ,WAAO,CAAC,CAACA,IAAF,IAAU,CAACT,aAAa,CAACS,IAAD,CAA/B;AACH,GANuB,CAAxB;AAQA,QAAMC,eAAe,GAAG,CAAC,CAACJ,cAAF,IAAoBA,cAAc,CAACK,MAAf,GAAwB,CAApE;AAEA,SAAOJ,eAAe,IAAIG,eAA1B;AACH,CAnBD;;AAqBA,OAAO,MAAME,OAAO,GAAGC,KAAK,IAAI;AAC5B,QAAM;AAAEC,IAAAA,kBAAF;AAAsBC,IAAAA,aAAtB;AAAqCC,IAAAA;AAArC,MAAiDH,KAAvD;AACA,QAAM,CAACI,WAAD,IAAgBpB,WAAW,CAACiB,kBAAD,CAAjC;AACA,QAAM,CAACI,SAAD,IAAcpB,cAAc,EAAlC;AACA,QAAM,CACFqB,aADE,EAEF;AACIC,IAAAA,aADJ;AAEIC,IAAAA,cAFJ;AAGIC,IAAAA,WAHJ;AAIIC,IAAAA,oCAJJ;AAKIC,IAAAA;AALJ,GAFE,IASFzB,kBAAkB,EATtB;AAWA,QAAM0B,mBAAmB,GAAG7B,WAAW,CAAC,YAAY;AAChD,UAAMwB,aAAa,EAAnB;AACAJ,IAAAA,OAAO,CAAC,MAAD,CAAP;AACH,GAHsC,EAGpC,CAACI,aAAD,EAAgBJ,OAAhB,CAHoC,CAAvC;AAKA,QAAMU,oBAAoB,GAAG9B,WAAW,CAAC,YAAY;AACjD,UAAMyB,cAAc,EAApB;AACAL,IAAAA,OAAO,CAAC,MAAD,CAAP;AACH,GAHuC,EAGrC,CAACK,cAAD,EAAiBL,OAAjB,CAHqC,CAAxC;AAKA,QAAMW,iBAAiB,GAAG/B,WAAW,CAAC,YAAY;AAC9C,QAAI;AACA,YAAM0B,WAAW,CAAC;AACdL,QAAAA;AADc,OAAD,CAAjB;AAGAD,MAAAA,OAAO,CAAC,SAAD,CAAP;AACH,KALD,CAKE,OAAOY,CAAP,EAAU;AACRb,MAAAA,aAAa,CAACa,CAAD,CAAb;AACH;AACJ,GAToC,EASlC,CAACX,WAAD,EAAcF,aAAd,EAA6BC,OAA7B,EAAsCM,WAAtC,CATkC,CAArC;AAWA,QAAMO,kBAAkB,GAAGjC,WAAW,CAAC,MAAM;AACzCoB,IAAAA,OAAO,CAAC,MAAD,CAAP;AACH,GAFqC,EAEnC,CAACA,OAAD,CAFmC,CAAtC;AAIA,SAAO;AACHE,IAAAA,SADG;AAEHY,IAAAA,gBAAgB,EAAEX,aAAa,CAACY,YAAd,IAA8Bb,SAAS,CAACc,OAFvD;AAGHb,IAAAA,aAHG;AAIHc,IAAAA,OAAO,EAAEhC,eAAe,CAACkB,aAAD,CAJrB;AAKHI,IAAAA,oCALG;AAMHC,IAAAA,oBANG;AAOHC,IAAAA,mBAPG;AAQHC,IAAAA,oBARG;AASHG,IAAAA,kBATG;AAUHF,IAAAA;AAVG,GAAP;AAYH,CApDM","sourcesContent":["import { useCallback } from 'react';\nimport { useMutation } from '@apollo/client';\n\nimport { useCartContext } from '@magento/peregrine/lib/context/cart';\nimport { useCheckoutContext } from '@magento/peregrine/lib/context/checkout';\nimport isObjectEmpty from '@magento/peregrine/lib/util/isObjectEmpty';\n\nconst isCheckoutReady = checkout => {\n    const {\n        billingAddress,\n        paymentData,\n        shippingAddress,\n        shippingMethod\n    } = checkout;\n\n    const objectsHaveData = [\n        billingAddress,\n        paymentData,\n        shippingAddress\n    ].every(data => {\n        return !!data && !isObjectEmpty(data);\n    });\n\n    const stringsHaveData = !!shippingMethod && shippingMethod.length > 0;\n\n    return objectsHaveData && stringsHaveData;\n};\n\nexport const useFlow = props => {\n    const { createCartMutation, onSubmitError, setStep } = props;\n    const [fetchCartId] = useMutation(createCartMutation);\n    const [cartState] = useCartContext();\n    const [\n        checkoutState,\n        {\n            beginCheckout,\n            cancelCheckout,\n            submitOrder,\n            submitPaymentMethodAndBillingAddress,\n            submitShippingMethod\n        }\n    ] = useCheckoutContext();\n\n    const handleBeginCheckout = useCallback(async () => {\n        await beginCheckout();\n        setStep('form');\n    }, [beginCheckout, setStep]);\n\n    const handleCancelCheckout = useCallback(async () => {\n        await cancelCheckout();\n        setStep('cart');\n    }, [cancelCheckout, setStep]);\n\n    const handleSubmitOrder = useCallback(async () => {\n        try {\n            await submitOrder({\n                fetchCartId\n            });\n            setStep('receipt');\n        } catch (e) {\n            onSubmitError(e);\n        }\n    }, [fetchCartId, onSubmitError, setStep, submitOrder]);\n\n    const handleCloseReceipt = useCallback(() => {\n        setStep('cart');\n    }, [setStep]);\n\n    return {\n        cartState,\n        checkoutDisabled: checkoutState.isSubmitting || cartState.isEmpty,\n        checkoutState,\n        isReady: isCheckoutReady(checkoutState),\n        submitPaymentMethodAndBillingAddress,\n        submitShippingMethod,\n        handleBeginCheckout,\n        handleCancelCheckout,\n        handleCloseReceipt,\n        handleSubmitOrder\n    };\n};\n"]}