{"version":3,"sources":["useAddressForm.js"],"names":["useCallback","useMemo","useCheckoutContext","useMutation","useUserContext","useAddressForm","props","countries","fields","onCancel","onSubmit","setGuestEmailMutation","setShippingAddressOnCartMutation","shippingAddress","shippingAddressError","submitShippingAddress","isSignedIn","setGuestEmail","fetchPolicy","setShippingAddressOnCart","values","reduce","acc","key","handleCancel","handleSubmit","addressFormValues","formValues","error","console","initialValues"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,OAAtB,QAAqC,OAArC;AACA,SAASC,kBAAT,QAAmC,yCAAnC;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,cAAT,QAA+B,qCAA/B;AAEA;;;;;;;;;;;;;;AAaA,OAAO,MAAMC,cAAc,GAAGC,KAAK,IAAI;AACnC,QAAM;AACFC,IAAAA,SADE;AAEFC,IAAAA,MAFE;AAGFC,IAAAA,QAHE;AAIFC,IAAAA,QAJE;AAKFC,IAAAA,qBALE;AAMFC,IAAAA;AANE,MAOFN,KAPJ;AASA,QAAM,CACF;AAAEO,IAAAA,eAAF;AAAmBC,IAAAA;AAAnB,GADE,EAEF;AAAEC,IAAAA;AAAF,GAFE,IAGFb,kBAAkB,EAHtB;AAKA,QAAM,CAAC;AAAEc,IAAAA;AAAF,GAAD,IAAmBZ,cAAc,EAAvC;AAEA,QAAM,CAACa,aAAD,IAAkBd,WAAW,CAACQ,qBAAD,EAAwB;AACvD;AACAO,IAAAA,WAAW,EAAE;AAF0C,GAAxB,CAAnC;AAKA,QAAM,CAACC,wBAAD,IAA6BhB,WAAW,CAC1CS,gCAD0C,CAA9C;AAIA,QAAMQ,MAAM,GAAGnB,OAAO,CAClB,MACIO,MAAM,CAACa,MAAP,CAAc,CAACC,GAAD,EAAMC,GAAN,KAAc;AACxBD,IAAAA,GAAG,CAACC,GAAD,CAAH,GAAWV,eAAe,CAACU,GAAD,CAA1B;AACA,WAAOD,GAAP;AACH,GAHD,EAGG,EAHH,CAFc,EAMlB,CAACd,MAAD,EAASK,eAAT,CANkB,CAAtB;AASA,QAAMW,YAAY,GAAGxB,WAAW,CAAC,MAAM;AACnCS,IAAAA,QAAQ;AACX,GAF+B,EAE7B,CAACA,QAAD,CAF6B,CAAhC;AAIA,QAAMgB,YAAY,GAAGzB,WAAW,CAC5B,MAAM0B,iBAAN,IAA2B;AACvB,QAAI;AACA,YAAMX,qBAAqB,CAAC;AACxBY,QAAAA,UAAU,EAAED,iBADY;AAExBnB,QAAAA,SAFwB;AAGxBU,QAAAA,aAHwB;AAIxBE,QAAAA;AAJwB,OAAD,CAA3B;AAMAT,MAAAA,QAAQ;AACX,KARD,CAQE,OAAOkB,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACH;AACJ,GAb2B,EAc5B,CACIrB,SADJ,EAEIG,QAFJ,EAGIO,aAHJ,EAIIE,wBAJJ,EAKIJ,qBALJ,CAd4B,CAAhC;AAuBA,SAAO;AACHa,IAAAA,KAAK,EAAEd,oBADJ;AAEHU,IAAAA,YAFG;AAGHC,IAAAA,YAHG;AAIHT,IAAAA,UAJG;AAKHc,IAAAA,aAAa,EAAEV;AALZ,GAAP;AAOH,CArEM","sourcesContent":["import { useCallback, useMemo } from 'react';\nimport { useCheckoutContext } from '@magento/peregrine/lib/context/checkout';\nimport { useMutation } from '@apollo/client';\nimport { useUserContext } from '@magento/peregrine/lib/context/user';\n\n/**\n * Returns values used to render an AddressForm component.\n *\n * @param {Object} props\n * @param {Object[]} props.fields an array of fields to reduce over for initial values\n * @param {function} props.onCancel cancel callback\n * @param {function} props.onSubmit submit callback\n * @returns {{\n *   handleCancel: function,\n *   handleSubmit: function,\n *   initialValues: object\n * }}\n */\nexport const useAddressForm = props => {\n    const {\n        countries,\n        fields,\n        onCancel,\n        onSubmit,\n        setGuestEmailMutation,\n        setShippingAddressOnCartMutation\n    } = props;\n\n    const [\n        { shippingAddress, shippingAddressError },\n        { submitShippingAddress }\n    ] = useCheckoutContext();\n\n    const [{ isSignedIn }] = useUserContext();\n\n    const [setGuestEmail] = useMutation(setGuestEmailMutation, {\n        // For security, never cache this mutation or the mutation results.\n        fetchPolicy: 'no-cache'\n    });\n\n    const [setShippingAddressOnCart] = useMutation(\n        setShippingAddressOnCartMutation\n    );\n\n    const values = useMemo(\n        () =>\n            fields.reduce((acc, key) => {\n                acc[key] = shippingAddress[key];\n                return acc;\n            }, {}),\n        [fields, shippingAddress]\n    );\n\n    const handleCancel = useCallback(() => {\n        onCancel();\n    }, [onCancel]);\n\n    const handleSubmit = useCallback(\n        async addressFormValues => {\n            try {\n                await submitShippingAddress({\n                    formValues: addressFormValues,\n                    countries,\n                    setGuestEmail,\n                    setShippingAddressOnCart\n                });\n                onSubmit();\n            } catch (error) {\n                console.error(error);\n            }\n        },\n        [\n            countries,\n            onSubmit,\n            setGuestEmail,\n            setShippingAddressOnCart,\n            submitShippingAddress\n        ]\n    );\n\n    return {\n        error: shippingAddressError,\n        handleCancel,\n        handleSubmit,\n        isSignedIn,\n        initialValues: values\n    };\n};\n"]}