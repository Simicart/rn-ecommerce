{"version":3,"sources":["useWishlistItem.js"],"names":["useCallback","useMutation","useCartContext","useWishlistItem","props","childSku","mutations","sku","addWishlistItemToCartMutation","cartId","cartItem","data","quantity","Object","assign","parent_sku","variant_sku","addWishlistItemToCart","error","loading","variables","handleAddToCart","handleMoreActions","console","log","hasError","isLoading"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,WAAT,QAA4B,gBAA5B;AAEA,SAASC,cAAT,QAA+B,oBAA/B;AAEA,OAAO,MAAMC,eAAe,GAAGC,KAAK,IAAI;AACpC,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,SAAZ;AAAuBC,IAAAA;AAAvB,MAA+BH,KAArC;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAoCF,SAA1C;AAEA,QAAM,CAAC;AAAEG,IAAAA;AAAF,GAAD,IAAeP,cAAc,EAAnC;AAEA,QAAMQ,QAAQ,GAAG;AACbC,IAAAA,IAAI,EAAE;AACFC,MAAAA,QAAQ,EAAE,CADR;AAEFL,MAAAA,GAAG,EAAEF,QAAQ,IAAIE;AAFf;AADO,GAAjB,CANoC,CAapC;;AACA,MAAIF,QAAJ,EAAc;AACVQ,IAAAA,MAAM,CAACC,MAAP,CAAcJ,QAAd,EAAwB;AACpBK,MAAAA,UAAU,EAAER,GADQ;AAEpBS,MAAAA,WAAW,EAAEX;AAFO,KAAxB;AAIH;;AAED,QAAM,CAACY,qBAAD,EAAwB;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAxB,IAA8ClB,WAAW,CAC3DO,6BAD2D,EAE3D;AACIY,IAAAA,SAAS,EAAE;AACPX,MAAAA,MADO;AAEPC,MAAAA;AAFO;AADf,GAF2D,CAA/D;AAUA,QAAMW,eAAe,GAAGrB,WAAW,CAAC,YAAY;AAC5C,QAAI;AACA,YAAMiB,qBAAqB,EAA3B;AACH,KAFD,CAEE,MAAM;AACJ;AACH;AACJ,GANkC,EAMhC,CAACA,qBAAD,CANgC,CAAnC;AAQA,QAAMK,iBAAiB,GAAGtB,WAAW,CAAC,MAAM;AACxCuB,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACH,GAFoC,EAElC,EAFkC,CAArC;AAIA,SAAO;AACHH,IAAAA,eADG;AAEHC,IAAAA,iBAFG;AAGHG,IAAAA,QAAQ,EAAE,CAAC,CAACP,KAHT;AAIHQ,IAAAA,SAAS,EAAEP;AAJR,GAAP;AAMH,CAjDM","sourcesContent":["import { useCallback } from 'react';\nimport { useMutation } from '@apollo/client';\n\nimport { useCartContext } from '../../context/cart';\n\nexport const useWishlistItem = props => {\n    const { childSku, mutations, sku } = props;\n    const { addWishlistItemToCartMutation } = mutations;\n\n    const [{ cartId }] = useCartContext();\n\n    const cartItem = {\n        data: {\n            quantity: 1,\n            sku: childSku || sku\n        }\n    };\n\n    // Merge in additional input variables for configurable items\n    if (childSku) {\n        Object.assign(cartItem, {\n            parent_sku: sku,\n            variant_sku: childSku\n        });\n    }\n\n    const [addWishlistItemToCart, { error, loading }] = useMutation(\n        addWishlistItemToCartMutation,\n        {\n            variables: {\n                cartId,\n                cartItem\n            }\n        }\n    );\n\n    const handleAddToCart = useCallback(async () => {\n        try {\n            await addWishlistItemToCart();\n        } catch {\n            return;\n        }\n    }, [addWishlistItemToCart]);\n\n    const handleMoreActions = useCallback(() => {\n        console.log('To be handled by PWA-632');\n    }, []);\n\n    return {\n        handleAddToCart,\n        handleMoreActions,\n        hasError: !!error,\n        isLoading: loading\n    };\n};\n"]}