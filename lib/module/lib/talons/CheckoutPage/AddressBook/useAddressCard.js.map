{"version":3,"sources":["useAddressCard.js"],"names":["useCallback","useEffect","useMemo","useState","useRef","useAddressCard","props","address","onEdit","onSelection","id","addressId","hasUpdate","setHasUpdate","hasRendered","updateTimer","undefined","current","setTimeout","clearTimeout","addressForEdit","country_code","countryCode","addressRest","country","code","handleClick","handleKeyPress","event","key","handleEditAddress"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,OAAjC,EAA0CC,QAA1C,EAAoDC,MAApD,QAAkE,OAAlE;AAEA,OAAO,MAAMC,cAAc,GAAGC,KAAK,IAAI;AACnC,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,MAAX;AAAmBC,IAAAA;AAAnB,MAAmCH,KAAzC;AACA,QAAM;AAAEI,IAAAA,EAAE,EAAEC;AAAN,MAAoBJ,OAA1B;AAEA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAMW,WAAW,GAAGV,MAAM,CAAC,KAAD,CAA1B;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIc,WAAJ;;AACA,QAAIR,OAAO,KAAKS,SAAhB,EAA2B;AACvB,UAAIF,WAAW,CAACG,OAAhB,EAAyB;AACrBJ,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,QAAAA,WAAW,GAAGG,UAAU,CAAC,MAAM;AAC3BL,UAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,SAFuB,EAErB,IAFqB,CAAxB;AAGH,OALD,MAKO;AACHC,QAAAA,WAAW,CAACG,OAAZ,GAAsB,IAAtB;AACH;AACJ;;AAED,WAAO,MAAM;AACT,UAAIF,WAAJ,EAAiB;AACbI,QAAAA,YAAY,CAACJ,WAAD,CAAZ;AACH;AACJ,KAJD;AAKH,GAlBQ,EAkBN,CAACD,WAAD,EAAcP,OAAd,CAlBM,CAAT;AAoBA,QAAMa,cAAc,GAAGlB,OAAO,CAAC,MAAM;AACjC,UAAM;AAAEmB,MAAAA,YAAY,EAAEC,WAAhB;AAA6B,SAAGC;AAAhC,QAAgDhB,OAAtD;AAEA,WAAO,EACH,GAAGgB,WADA;AAEHC,MAAAA,OAAO,EAAE;AACLC,QAAAA,IAAI,EAAEH;AADD;AAFN,KAAP;AAMH,GAT6B,EAS3B,CAACf,OAAD,CAT2B,CAA9B;AAWA,QAAMmB,WAAW,GAAG1B,WAAW,CAAC,MAAM;AAClCS,IAAAA,WAAW,CAACE,SAAD,CAAX;AACH,GAF8B,EAE5B,CAACA,SAAD,EAAYF,WAAZ,CAF4B,CAA/B;AAIA,QAAMkB,cAAc,GAAG3B,WAAW,CAC9B4B,KAAK,IAAI;AACL,QAAIA,KAAK,CAACC,GAAN,KAAc,OAAlB,EAA2B;AACvBpB,MAAAA,WAAW,CAACE,SAAD,CAAX;AACH;AACJ,GAL6B,EAM9B,CAACA,SAAD,EAAYF,WAAZ,CAN8B,CAAlC;AASA,QAAMqB,iBAAiB,GAAG9B,WAAW,CAAC,MAAM;AACxCQ,IAAAA,MAAM,CAACY,cAAD,CAAN;AACH,GAFoC,EAElC,CAACA,cAAD,EAAiBZ,MAAjB,CAFkC,CAArC;AAIA,SAAO;AACHkB,IAAAA,WADG;AAEHI,IAAAA,iBAFG;AAGHH,IAAAA,cAHG;AAIHf,IAAAA;AAJG,GAAP;AAMH,CA7DM","sourcesContent":["import { useCallback, useEffect, useMemo, useState, useRef } from 'react';\n\nexport const useAddressCard = props => {\n    const { address, onEdit, onSelection } = props;\n    const { id: addressId } = address;\n\n    const [hasUpdate, setHasUpdate] = useState(false);\n    const hasRendered = useRef(false);\n\n    useEffect(() => {\n        let updateTimer;\n        if (address !== undefined) {\n            if (hasRendered.current) {\n                setHasUpdate(true);\n                updateTimer = setTimeout(() => {\n                    setHasUpdate(false);\n                }, 2000);\n            } else {\n                hasRendered.current = true;\n            }\n        }\n\n        return () => {\n            if (updateTimer) {\n                clearTimeout(updateTimer);\n            }\n        };\n    }, [hasRendered, address]);\n\n    const addressForEdit = useMemo(() => {\n        const { country_code: countryCode, ...addressRest } = address;\n\n        return {\n            ...addressRest,\n            country: {\n                code: countryCode\n            }\n        };\n    }, [address]);\n\n    const handleClick = useCallback(() => {\n        onSelection(addressId);\n    }, [addressId, onSelection]);\n\n    const handleKeyPress = useCallback(\n        event => {\n            if (event.key === 'Enter') {\n                onSelection(addressId);\n            }\n        },\n        [addressId, onSelection]\n    );\n\n    const handleEditAddress = useCallback(() => {\n        onEdit(addressForEdit);\n    }, [addressForEdit, onEdit]);\n\n    return {\n        handleClick,\n        handleEditAddress,\n        handleKeyPress,\n        hasUpdate\n    };\n};\n"]}