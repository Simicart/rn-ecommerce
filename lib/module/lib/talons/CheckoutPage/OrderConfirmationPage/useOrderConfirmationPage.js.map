{"version":3,"sources":["useOrderConfirmationPage.js"],"names":["useUserContext","flatten","data","cart","shipping_addresses","address","shippingMethod","selected_shipping_method","carrier_title","method_title","city","country","label","email","firstname","lastname","postcode","region","street","totalItemQuantity","total_quantity","useOrderConfirmationPage","props","isSignedIn","flatData"],"mappings":"AAAA,SAASA,cAAT,QAA+B,uBAA/B;AAEA,OAAO,MAAMC,OAAO,GAAGC,IAAI,IAAI;AAC3B,QAAM;AAAEC,IAAAA;AAAF,MAAWD,IAAjB;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAyBD,IAA/B;AACA,QAAME,OAAO,GAAGD,kBAAkB,CAAC,CAAD,CAAlC;AAEA,QAAME,cAAc,aAChBD,OAAO,CAACE,wBAAR,CAAiCC,aADjB,gBAEdH,OAAO,CAACE,wBAAR,CAAiCE,YAFnB,CAApB;AAIA,SAAO;AACHC,IAAAA,IAAI,EAAEL,OAAO,CAACK,IADX;AAEHC,IAAAA,OAAO,EAAEN,OAAO,CAACM,OAAR,CAAgBC,KAFtB;AAGHC,IAAAA,KAAK,EAAEV,IAAI,CAACU,KAHT;AAIHC,IAAAA,SAAS,EAAET,OAAO,CAACS,SAJhB;AAKHC,IAAAA,QAAQ,EAAEV,OAAO,CAACU,QALf;AAMHC,IAAAA,QAAQ,EAAEX,OAAO,CAACW,QANf;AAOHC,IAAAA,MAAM,EAAEZ,OAAO,CAACY,MAAR,CAAeL,KAPpB;AAQHN,IAAAA,cARG;AASHY,IAAAA,MAAM,EAAEb,OAAO,CAACa,MATb;AAUHC,IAAAA,iBAAiB,EAAEhB,IAAI,CAACiB;AAVrB,GAAP;AAYH,CArBM;AAuBP,OAAO,MAAMC,wBAAwB,GAAGC,KAAK,IAAI;AAC7C,QAAM;AAAEpB,IAAAA;AAAF,MAAWoB,KAAjB;AACA,QAAM,CAAC;AAAEC,IAAAA;AAAF,GAAD,IAAmBvB,cAAc,EAAvC;AAEA,SAAO;AACHwB,IAAAA,QAAQ,EAAEvB,OAAO,CAACC,IAAD,CADd;AAEHqB,IAAAA;AAFG,GAAP;AAIH,CARM","sourcesContent":["import { useUserContext } from '../../../context/user';\n\nexport const flatten = data => {\n    const { cart } = data;\n    const { shipping_addresses } = cart;\n    const address = shipping_addresses[0];\n\n    const shippingMethod = `${\n        address.selected_shipping_method.carrier_title\n    } - ${address.selected_shipping_method.method_title}`;\n\n    return {\n        city: address.city,\n        country: address.country.label,\n        email: cart.email,\n        firstname: address.firstname,\n        lastname: address.lastname,\n        postcode: address.postcode,\n        region: address.region.label,\n        shippingMethod,\n        street: address.street,\n        totalItemQuantity: cart.total_quantity\n    };\n};\n\nexport const useOrderConfirmationPage = props => {\n    const { data } = props;\n    const [{ isSignedIn }] = useUserContext();\n\n    return {\n        flatData: flatten(data),\n        isSignedIn\n    };\n};\n"]}