{"version":3,"sources":["bindActionCreators.js"],"names":["bindActionCreators","getBindFunction","value","bindActionCreatorsRecursively","actions","dispatch","Object","entries","reduce","acc","name","bind"],"mappings":"AAAA,SAASA,kBAAT,QAAmC,OAAnC;AAEA;;AAEA;;;;;;;;;;;AAUA,MAAMC,eAAe,GAAGC,KAAK,IACzB,OAAOA,KAAP,KAAiB,UAAjB,GACMF,kBADN,GAEMG,6BAHV;AAKA;;;;;;;;;;;;;;;AAaA,MAAMA,6BAA6B,GAAG,CAACC,OAAD,EAAUC,QAAV,KAClCC,MAAM,CAACC,OAAP,CAAeH,OAAf,EAAwBI,MAAxB,CAA+B,CAACC,GAAD,EAAM,CAACC,IAAD,EAAOR,KAAP,CAAN,KAAwB;AACnD,QAAMS,IAAI,GAAGV,eAAe,CAACC,KAAD,CAA5B;AACAO,EAAAA,GAAG,CAACC,IAAD,CAAH,GAAYC,IAAI,CAACT,KAAD,EAAQG,QAAR,CAAhB;AACA,SAAOI,GAAP;AACH,CAJD,EAIG,EAJH,CADJ;;AAOA,eAAeN,6BAAf","sourcesContent":["import { bindActionCreators } from 'redux';\n\n/** @typedef {{ [key: string]: (Function | CreatorObject) }} CreatorObject */\n\n/**\n * Returns a function to bind action creators based on the shape of the value.\n *\n * Redux's `bindActionCreators` expects a function or an object whose values\n * are functions. Since our action creators are exported as nested objects,\n * whose values may be objects, we invoke `bindActionCreators` recursively.\n *\n * @param {Function | CreatorObject} value - Action creator(s) to be bound.\n * @return {Function} - A function compatible with `value`.\n */\nconst getBindFunction = value =>\n    typeof value === 'function'\n        ? bindActionCreators\n        : bindActionCreatorsRecursively;\n\n/**\n * Maps an object whose values are action creators (or objects of such)\n * into an object whose values are bound action creators (or objects of such).\n *\n * A bound action creator is one wrapped into a `dispatch` call,\n * such that invoking it creates and dispatches an action.\n *\n * Note that `actions` may not be a function.\n *\n * @param {CreatorObject} actions - A nested object containing action creators.\n * @param {Function} dispatch - The `dispatch` function from a Redux store.\n * @return {CreatorObject} - A nested object containing bound action creators.\n */\nconst bindActionCreatorsRecursively = (actions, dispatch) =>\n    Object.entries(actions).reduce((acc, [name, value]) => {\n        const bind = getBindFunction(value);\n        acc[name] = bind(value, dispatch);\n        return acc;\n    }, {});\n\nexport default bindActionCreatorsRecursively;\n"]}