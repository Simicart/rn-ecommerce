{"version":3,"sources":["withLogger.js"],"names":["withLogger","reducer","state","action","result","console","groupCollapsed","type","group","log","payload","groupEnd"],"mappings":"AAAA;;;;;AAKA,MAAMA,UAAU,GAAGC,OAAO,IAAI,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC7C,QAAMC,MAAM,GAAGH,OAAO,CAACC,KAAD,EAAQC,MAAR,CAAtB;AAEAE,EAAAA,OAAO,CAACC,cAAR,CAAuBH,MAAM,CAACI,IAA9B;AACAF,EAAAA,OAAO,CAACG,KAAR,CAAc,SAAd;AACAH,EAAAA,OAAO,CAACI,GAAR,CAAYN,MAAM,CAACO,OAAnB;AACAL,EAAAA,OAAO,CAACM,QAAR;AACAN,EAAAA,OAAO,CAACG,KAAR,CAAc,YAAd;AACAH,EAAAA,OAAO,CAACI,GAAR,CAAYL,MAAZ;AACAC,EAAAA,OAAO,CAACM,QAAR;AACAN,EAAAA,OAAO,CAACM,QAAR;AAEA,SAAOP,MAAP;AACH,CAbD;;AAeA,eAAeJ,UAAf","sourcesContent":["/**\n * Logs action type, payload, and result state to the browser console.\n * @param {*} reducer a reducing function to wrap with logging\n * @returns {Function} a wrapped reducer function\n */\nconst withLogger = reducer => (state, action) => {\n    const result = reducer(state, action);\n\n    console.groupCollapsed(action.type);\n    console.group('payload');\n    console.log(action.payload);\n    console.groupEnd();\n    console.group('next state');\n    console.log(result);\n    console.groupEnd();\n    console.groupEnd();\n\n    return result;\n};\n\nexport default withLogger;\n"]}