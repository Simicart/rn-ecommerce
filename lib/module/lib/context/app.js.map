{"version":3,"sources":["app.js"],"names":["React","createContext","useContext","useMemo","connect","actions","asyncActions","bindActionCreators","AppContext","AppContextProvider","props","appState","children","appApi","contextValue","mapStateToProps","app","mapDispatchToProps","dispatch","useAppContext"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,OAA3C,QAA0D,OAA1D;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAO,KAAKC,YAAZ,MAA8B,mCAA9B;AACA,OAAOC,kBAAP,MAA+B,4BAA/B;AAEA,MAAMC,UAAU,gBAAGP,aAAa,EAAhC;;AAEA,MAAMQ,kBAAkB,GAAGC,KAAK,IAAI;AAChC,QAAM;AAAEL,IAAAA,OAAF;AAAWM,IAAAA,QAAX;AAAqBL,IAAAA,YAArB;AAAmCM,IAAAA;AAAnC,MAAgDF,KAAtD;AAEA,QAAMG,MAAM,GAAGV,OAAO,CAClB,OAAO;AACHE,IAAAA,OADG;AAEH,OAAGC;AAFA,GAAP,CADkB,EAKlB,CAACD,OAAD,EAAUC,YAAV,CALkB,CAAtB;AAQA,QAAMQ,YAAY,GAAGX,OAAO,CAAC,MAAM,CAACQ,QAAD,EAAWE,MAAX,CAAP,EAA2B,CAACA,MAAD,EAASF,QAAT,CAA3B,CAA5B;AAEA,sBACI,oBAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAEG;AAA5B,KACKF,QADL,CADJ;AAKH,CAlBD;;AAoBA,MAAMG,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,MAAc;AAAEL,EAAAA,QAAQ,EAAEK;AAAZ,CAAd,CAAxB;;AAEA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AACpCb,EAAAA,OAAO,EAAEE,kBAAkB,CAACF,OAAD,EAAUa,QAAV,CADS;AAEpCZ,EAAAA,YAAY,EAAEC,kBAAkB,CAACD,YAAD,EAAeY,QAAf;AAFI,CAAL,CAAnC;;AAKA,eAAed,OAAO,CAClBW,eADkB,EAElBE,kBAFkB,CAAP,CAGbR,kBAHa,CAAf;AAKA,OAAO,MAAMU,aAAa,GAAG,MAAMjB,UAAU,CAACM,UAAD,CAAtC","sourcesContent":["import React, { createContext, useContext, useMemo } from 'react';\nimport { connect } from 'react-redux';\n\nimport actions from '../store/actions/app/actions';\nimport * as asyncActions from '../store/actions/app/asyncActions';\nimport bindActionCreators from '../util/bindActionCreators';\n\nconst AppContext = createContext();\n\nconst AppContextProvider = props => {\n    const { actions, appState, asyncActions, children } = props;\n\n    const appApi = useMemo(\n        () => ({\n            actions,\n            ...asyncActions\n        }),\n        [actions, asyncActions]\n    );\n\n    const contextValue = useMemo(() => [appState, appApi], [appApi, appState]);\n\n    return (\n        <AppContext.Provider value={contextValue}>\n            {children}\n        </AppContext.Provider>\n    );\n};\n\nconst mapStateToProps = ({ app }) => ({ appState: app });\n\nconst mapDispatchToProps = dispatch => ({\n    actions: bindActionCreators(actions, dispatch),\n    asyncActions: bindActionCreators(asyncActions, dispatch)\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(AppContextProvider);\n\nexport const useAppContext = () => useContext(AppContext);\n"]}