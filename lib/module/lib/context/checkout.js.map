{"version":3,"sources":["checkout.js"],"names":["React","createContext","useContext","useMemo","connect","actions","asyncActions","bindActionCreators","CheckoutContext","CheckoutContextProvider","props","checkoutState","children","checkoutApi","contextValue","mapStateToProps","checkout","mapDispatchToProps","dispatch","useCheckoutContext"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,OAA3C,QAA0D,OAA1D;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,OAAP,MAAoB,mCAApB;AACA,OAAO,KAAKC,YAAZ,MAA8B,wCAA9B;AACA,OAAOC,kBAAP,MAA+B,4BAA/B;AAEA,MAAMC,eAAe,gBAAGP,aAAa,EAArC;;AAEA,MAAMQ,uBAAuB,GAAGC,KAAK,IAAI;AACrC,QAAM;AAAEL,IAAAA,OAAF;AAAWC,IAAAA,YAAX;AAAyBK,IAAAA,aAAzB;AAAwCC,IAAAA;AAAxC,MAAqDF,KAA3D;AAEA,QAAMG,WAAW,GAAGV,OAAO,CACvB,OAAO;AACHE,IAAAA,OADG;AAEH,OAAGC;AAFA,GAAP,CADuB,EAKvB,CAACD,OAAD,EAAUC,YAAV,CALuB,CAA3B;AAQA,QAAMQ,YAAY,GAAGX,OAAO,CAAC,MAAM,CAACQ,aAAD,EAAgBE,WAAhB,CAAP,EAAqC,CAC7DA,WAD6D,EAE7DF,aAF6D,CAArC,CAA5B;AAKA,sBACI,oBAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAEG;AAAjC,KACKF,QADL,CADJ;AAKH,CArBD;;AAuBA,MAAMG,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,MAAmB;AAAEL,EAAAA,aAAa,EAAEK;AAAjB,CAAnB,CAAxB;;AAEA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AACpCb,EAAAA,OAAO,EAAEE,kBAAkB,CAACF,OAAD,EAAUa,QAAV,CADS;AAEpCZ,EAAAA,YAAY,EAAEC,kBAAkB,CAACD,YAAD,EAAeY,QAAf;AAFI,CAAL,CAAnC;;AAKA,eAAed,OAAO,CAClBW,eADkB,EAElBE,kBAFkB,CAAP,CAGbR,uBAHa,CAAf;AAKA,OAAO,MAAMU,kBAAkB,GAAG,MAAMjB,UAAU,CAACM,eAAD,CAA3C","sourcesContent":["import React, { createContext, useContext, useMemo } from 'react';\nimport { connect } from 'react-redux';\n\nimport actions from '../store/actions/checkout/actions';\nimport * as asyncActions from '../store/actions/checkout/asyncActions';\nimport bindActionCreators from '../util/bindActionCreators';\n\nconst CheckoutContext = createContext();\n\nconst CheckoutContextProvider = props => {\n    const { actions, asyncActions, checkoutState, children } = props;\n\n    const checkoutApi = useMemo(\n        () => ({\n            actions,\n            ...asyncActions\n        }),\n        [actions, asyncActions]\n    );\n\n    const contextValue = useMemo(() => [checkoutState, checkoutApi], [\n        checkoutApi,\n        checkoutState\n    ]);\n\n    return (\n        <CheckoutContext.Provider value={contextValue}>\n            {children}\n        </CheckoutContext.Provider>\n    );\n};\n\nconst mapStateToProps = ({ checkout }) => ({ checkoutState: checkout });\n\nconst mapDispatchToProps = dispatch => ({\n    actions: bindActionCreators(actions, dispatch),\n    asyncActions: bindActionCreators(asyncActions, dispatch)\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(CheckoutContextProvider);\n\nexport const useCheckoutContext = () => useContext(CheckoutContext);\n"]}