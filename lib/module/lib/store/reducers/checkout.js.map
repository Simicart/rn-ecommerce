{"version":3,"sources":["checkout.js"],"names":["handleActions","actions","name","initialState","availableShippingMethods","billingAddress","billingAddressError","isSubmitting","orderError","paymentMethodError","paymentCode","paymentData","receipt","order","shippingAddress","shippingAddressError","shippingMethod","shippingMethodError","shippingTitle","reducerMap","begin","state","payload","submit","accept","newState","sameAsShippingAddress","street","reject","getShippingMethods","receive","error","map","method","code","carrier_code","title","carrier_title","paymentMethod","data","setOrder","reset"],"mappings":"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","sourcesContent":["import { handleActions } from 'redux-actions';\nimport actions from '../actions/checkout';\n\nexport const name = 'checkout';\n\nconst initialState = {\n    availableShippingMethods: [],\n    billingAddress: null,\n    billingAddressError: null,\n    isSubmitting: false,\n    orderError: null,\n    paymentMethodError: null,\n    paymentCode: '',\n    paymentData: null,\n    receipt: {\n        order: {}\n    },\n    shippingAddress: {},\n    shippingAddressError: null,\n    shippingMethod: '',\n    shippingMethodError: null,\n    shippingTitle: ''\n};\n\nconst reducerMap = {\n    [actions.begin]: (state, { payload }) => {\n        return {\n            ...state,\n            ...payload\n        };\n    },\n    [actions.billingAddress.submit]: state => ({\n        ...state,\n        billingAddressError: null,\n        isSubmitting: true\n    }),\n    [actions.billingAddress.accept]: (state, { payload }) => {\n        // Billing address can either be an object with address props OR\n        // an object with a single prop, `sameAsShippingAddress`, so we need\n        // to do some special handling to make sure the store reflects that.\n        const newState = {\n            ...state,\n            isSubmitting: false\n        };\n        if (payload.sameAsShippingAddress) {\n            newState.billingAddress = {\n                ...payload\n            };\n        } else if (!payload.sameAsShippingAddress) {\n            newState.billingAddress = {\n                ...payload,\n                street: [...payload.street]\n            };\n        }\n        return newState;\n    },\n    [actions.billingAddress.reject]: (state, { payload }) => {\n        return {\n            ...state,\n            billingAddressError: payload,\n            isSubmitting: false\n        };\n    },\n    [actions.getShippingMethods.receive]: (state, { payload, error }) => {\n        if (error) {\n            return state;\n        }\n\n        return {\n            ...state,\n            availableShippingMethods: payload.map(method => ({\n                ...method,\n                code: method.carrier_code,\n                title: method.carrier_title\n            }))\n        };\n    },\n    [actions.shippingAddress.submit]: state => ({\n        ...state,\n        isSubmitting: true,\n        shippingAddressError: null\n    }),\n    [actions.shippingAddress.accept]: (state, { payload }) => {\n        return {\n            ...state,\n            isSubmitting: false,\n            shippingAddress: {\n                ...state.shippingAddress,\n                ...payload,\n                street: [...payload.street]\n            }\n        };\n    },\n    [actions.shippingAddress.reject]: (state, { payload }) => {\n        return {\n            ...state,\n            isSubmitting: false,\n            shippingAddressError: payload\n        };\n    },\n    [actions.paymentMethod.submit]: state => ({\n        ...state,\n        isSubmitting: true,\n        paymentMethodError: null\n    }),\n    [actions.paymentMethod.accept]: (state, { payload }) => {\n        return {\n            ...state,\n            isSubmitting: false,\n            paymentCode: payload.code,\n            paymentData: payload.data\n        };\n    },\n    [actions.paymentMethod.reject]: (state, { payload }) => {\n        return {\n            ...state,\n            isSubmitting: false,\n            paymentMethodError: payload\n        };\n    },\n    [actions.receipt.setOrder]: (state, { payload }) => ({\n        ...state,\n        receipt: {\n            order: payload\n        }\n    }),\n    [actions.receipt.reset]: state => ({\n        ...state,\n        receipt: {\n            ...initialState.receipt\n        }\n    }),\n    [actions.shippingMethod.submit]: state => ({\n        ...state,\n        isSubmitting: true,\n        shippingMethodError: null\n    }),\n    [actions.shippingMethod.accept]: (state, { payload }) => {\n        return {\n            ...state,\n            isSubmitting: false,\n            shippingMethod: payload.carrier_code,\n            shippingTitle: payload.carrier_title\n        };\n    },\n    [actions.shippingMethod.reject]: (state, { payload }) => {\n        return {\n            ...state,\n            isSubmitting: false,\n            shippingMethodError: payload\n        };\n    },\n    [actions.order.submit]: state => ({\n        ...state,\n        isSubmitting: true,\n        orderError: null\n    }),\n    [actions.order.accept]: state => ({\n        ...state,\n        isSubmitting: false\n    }),\n    [actions.order.reject]: (state, { payload }) => {\n        return {\n            ...state,\n            isSubmitting: false,\n            orderError: payload\n        };\n    },\n    [actions.reset]: () => initialState\n};\n\nexport default handleActions(reducerMap, initialState);\n"]}