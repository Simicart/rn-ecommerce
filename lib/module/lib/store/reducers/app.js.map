{"version":3,"sources":["app.js"],"names":["handleActions","actions","name","initialState","drawer","hasBeenOffline","navigator","onLine","isOnline","isPageLoading","overlay","pending","searchOpen","reducerMap","toggleDrawer","state","payload","toggleSearch","setOnline","setOffline","setPageLoading"],"mappings":"AAAA,SAAQA,aAAR,QAA4B,eAA5B;AAEA,OAAOC,OAAP,MAAoB,gBAApB;AAEA,OAAO,MAAMC,IAAI,GAAG,KAAb;AAEP,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,IADW;AAEnBC,EAAAA,cAAc,EAAE,CAACC,SAAS,CAACC,MAFR;AAGnBC,EAAAA,QAAQ,EAAEF,SAAS,CAACC,MAHD;AAInBE,EAAAA,aAAa,EAAE,KAJI;AAKnBC,EAAAA,OAAO,EAAE,KALU;AAMnBC,EAAAA,OAAO,EAAE,EANU;AAOnBC,EAAAA,UAAU,EAAE;AAPO,CAArB;AAUA,MAAMC,UAAU,GAAG;AACjB,GAACZ,OAAO,CAACa,YAAT,GAAwB,CAACC,KAAD,EAAQ;AAACC,IAAAA;AAAD,GAAR,KAAsB;AAC5C,WAAO,EACL,GAAGD,KADE;AAELX,MAAAA,MAAM,EAAEY,OAFH;AAGLN,MAAAA,OAAO,EAAE,CAAC,CAACM;AAHN,KAAP;AAKD,GAPgB;AAQjB,GAACf,OAAO,CAACgB,YAAT,GAAwBF,KAAK,IAAI;AAC/B,WAAO,EACL,GAAGA,KADE;AAELH,MAAAA,UAAU,EAAE,CAACG,KAAK,CAACH;AAFd,KAAP;AAID,GAbgB;AAcjB,GAACX,OAAO,CAACiB,SAAT,GAAqBH,KAAK,IAAI;AAC5B,WAAO,EACL,GAAGA,KADE;AAELP,MAAAA,QAAQ,EAAE;AAFL,KAAP;AAID,GAnBgB;AAoBjB,GAACP,OAAO,CAACkB,UAAT,GAAsBJ,KAAK,IAAI;AAC7B,WAAO,EACL,GAAGA,KADE;AAELP,MAAAA,QAAQ,EAAE,KAFL;AAGLH,MAAAA,cAAc,EAAE;AAHX,KAAP;AAKD,GA1BgB;AA2BjB,GAACJ,OAAO,CAACmB,cAAT,GAA0B,CAACL,KAAD,EAAQ;AAACC,IAAAA;AAAD,GAAR,KAAsB;AAC9C,WAAO,EACL,GAAGD,KADE;AAELN,MAAAA,aAAa,EAAE,CAAC,CAACO;AAFZ,KAAP;AAID;AAhCgB,CAAnB;AAmCA,eAAehB,aAAa,CAACa,UAAD,EAAaV,YAAb,CAA5B","sourcesContent":["import {handleActions} from 'redux-actions';\n\nimport actions from '../actions/app';\n\nexport const name = 'app';\n\nconst initialState = {\n  drawer: null,\n  hasBeenOffline: !navigator.onLine,\n  isOnline: navigator.onLine,\n  isPageLoading: false,\n  overlay: false,\n  pending: {},\n  searchOpen: false,\n};\n\nconst reducerMap = {\n  [actions.toggleDrawer]: (state, {payload}) => {\n    return {\n      ...state,\n      drawer: payload,\n      overlay: !!payload,\n    };\n  },\n  [actions.toggleSearch]: state => {\n    return {\n      ...state,\n      searchOpen: !state.searchOpen,\n    };\n  },\n  [actions.setOnline]: state => {\n    return {\n      ...state,\n      isOnline: true,\n    };\n  },\n  [actions.setOffline]: state => {\n    return {\n      ...state,\n      isOnline: false,\n      hasBeenOffline: true,\n    };\n  },\n  [actions.setPageLoading]: (state, {payload}) => {\n    return {\n      ...state,\n      isPageLoading: !!payload,\n    };\n  },\n};\n\nexport default handleActions(reducerMap, initialState);\n"]}