{"version":3,"sources":["peregrine-intercept.js"],"names":["TalonWrapperConfig","require","module","exports","targets","builtins","of","specialFeatures","tap","featuresByModule","cssModules","esModules","graphQlQueries","transformModules","addTransform","talonWrapperConfig","own","talons","call"],"mappings":"AAAA,MAAMA,kBAAkB,GAAGC,OAAO,CAAC,sBAAD,CAAlC;;AAEAC,MAAM,CAACC,OAAP,GAAiBC,OAAO,IAAI;AACxB,QAAMC,QAAQ,GAAGD,OAAO,CAACE,EAAR,CAAW,wBAAX,CAAjB;AAEAD,EAAAA,QAAQ,CAACE,eAAT,CAAyBC,GAAzB,CAA6BC,gBAAgB,IAAI;AAC7CA,IAAAA,gBAAgB,CAAC,oBAAD,CAAhB,GAAyC;AACrCC,MAAAA,UAAU,EAAE,IADyB;AAErCC,MAAAA,SAAS,EAAE,IAF0B;AAGrCC,MAAAA,cAAc,EAAE;AAHqB,KAAzC;AAKH,GAND;AAQA;;;;;;;;;;AASAP,EAAAA,QAAQ,CAACQ,gBAAT,CAA0BL,GAA1B,CAA8BM,YAAY,IAAI;AAC1C,UAAMC,kBAAkB,GAAG,IAAIf,kBAAJ,CAAuBc,YAAvB,CAA3B;AAEAV,IAAAA,OAAO,CAACY,GAAR,CAAYC,MAAZ,CAAmBC,IAAnB,CAAwBH,kBAAxB;AACH,GAJD;AAKH,CAzBD","sourcesContent":["const TalonWrapperConfig = require('./TalonWrapperConfig');\n\nmodule.exports = targets => {\n    const builtins = targets.of('@magento/pwa-buildpack');\n\n    builtins.specialFeatures.tap(featuresByModule => {\n        featuresByModule['@magento/peregrine'] = {\n            cssModules: true,\n            esModules: true,\n            graphQlQueries: true\n        };\n    });\n\n    /**\n     * Tap the low-level Buildpack target for wrapping _any_ frontend module.\n     * Wrap the config object in a TalonWrapperConfig, which presents\n     * higher-level targets for named and namespaced talons, instead of the\n     * file paths directly.\n     * Pass that higher-level config through `talons` interceptors, so they can\n     * add wrappers for the talon modules without tapping the `transformModules`\n     * config themselves.\n     */\n    builtins.transformModules.tap(addTransform => {\n        const talonWrapperConfig = new TalonWrapperConfig(addTransform);\n\n        targets.own.talons.call(talonWrapperConfig);\n    });\n};\n"]}